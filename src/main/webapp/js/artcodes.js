window.artcodes=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return o})),n.d(e,"c",(function(){return s}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function i(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var o=function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function a(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a}function s(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(a(arguments[e]));return t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var r=function(){function t(t){void 0===t&&(t={}),this.adapter=t}return Object.defineProperty(t,"cssClasses",{get:function(){return{}},enumerable:!0,configurable:!0}),Object.defineProperty(t,"strings",{get:function(){return{}},enumerable:!0,configurable:!0}),Object.defineProperty(t,"numbers",{get:function(){return{}},enumerable:!0,configurable:!0}),Object.defineProperty(t,"defaultAdapter",{get:function(){return{}},enumerable:!0,configurable:!0}),t.prototype.init=function(){},t.prototype.destroy=function(){},t}()},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(0),i=n(1),o=function(){function t(t,e){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];this.root=t,this.initialize.apply(this,Object(r.c)(n)),this.foundation=void 0===e?this.getDefaultFoundation():e,this.foundation.init(),this.initialSyncWithDOM()}return t.attachTo=function(e){return new t(e,new i.a({}))},t.prototype.initialize=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},t.prototype.getDefaultFoundation=function(){throw new Error("Subclasses must override getDefaultFoundation to return a properly configured foundation class")},t.prototype.initialSyncWithDOM=function(){},t.prototype.destroy=function(){this.foundation.destroy()},t.prototype.listen=function(t,e,n){this.root.addEventListener(t,e,n)},t.prototype.unlisten=function(t,e,n){this.root.removeEventListener(t,e,n)},t.prototype.emit=function(t,e,n){var r;void 0===n&&(n=!1),"function"==typeof CustomEvent?r=new CustomEvent(t,{bubbles:n,detail:e}):(r=document.createEvent("CustomEvent")).initCustomEvent(t,n,!1,e),this.root.dispatchEvent(r)},t}()},function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.scan=void 0;const i=n(4),o=n(6),a=n(7),s=n(9),u=n(10),c=n(11);e.scan=function(t,e){return r(this,void 0,void 0,(function*(){t.innerHTML=s.default;const n=document.getElementById("artc_videoInput"),f=document.getElementById("artc_canvasOutput"),l=document.getElementById("artc_buttonAction"),p=document.getElementById("artc_buttonStart"),d=document.getElementById("artc_buttonStop"),h=document.getElementById("artc_image"),m=document.getElementById("artc_placeholder");null!=e.image&&""!=e.image?(h.src=e.image,h.style.display=""):(h.style.display="none",h.height=600,h.style.backgroundColor="#000"),m.style.display="",new u.MDCRipple(l),new u.MDCRipple(p),new u.MDCRipple(d);const v=document.getElementById("artc_deviceSelect"),g=document.getElementById("artc_loadingIndicator");new c.MDCCircularProgress(g).determinate=!1;var y="/opencv.js";document.querySelectorAll("script").forEach(t=>{const e=t.src.indexOf("/artcodes.");console.log(t.src),console.log(t),console.log(e),e>0&&(y=t.src.slice(0,e)+"/opencv.js",console.log(y))}),yield i.loadOpencv({opencvJsLocation:y});const b=new a.MarkerDetector(e),w=new o.VideoReader(n,f,{video:{facingMode:"environment"},audio:!1}),_=()=>{w.stop(),w.constraints={video:{deviceId:v.value}},E()},x=new cv.Scalar(0,255,0);let O=null;const E=()=>r(this,void 0,void 0,(function*(){try{g.classList.remove("mdc-circular-progress--closed"),p.classList.add("mdc-fab--exited"),yield w.start();const t=w.size,e=new cv.Mat(t.width,t.height,cv.CV_8UC1);let n=0;const r=5e3;d.style.display="",g.classList.add("mdc-circular-progress--closed"),l.style.display="",m.style.display="none",f.style.display="",p.classList.add("mdc-fab--exited"),history.replaceState(null,null,"#play"),navigator.mediaDevices.enumerateDevices().then((function(t){for(v.removeEventListener("input",_);v.options.length>0;)v.remove(0);console.log(t);const e=t.filter(t=>"videoinput"==t.kind);e.length>1&&(e.forEach(t=>{const e=document.createElement("option");e.value=t.deviceId,e.innerHTML=t.label,v.appendChild(e)}),v.value=w.deviceId,v.addEventListener("input",_),v.style.display="")})).catch((function(t){console.log(t.name+": "+t.message)}));const i=()=>{if(w.isStreaming){const t=Date.now(),o=w.read();cv.cvtColor(o,e,cv.COLOR_RGBA2GRAY),cv.flip(e,e,1),cv.adaptiveThreshold(e,e,255,cv.ADAPTIVE_THRESH_MEAN_C,cv.THRESH_BINARY,101,1);const a=new cv.MatVector,s=new cv.Mat;cv.findContours(e,a,s,cv.RETR_TREE,cv.CHAIN_APPROX_SIMPLE);const u=b.findMarker(s);null!=u?(u.equals(O)||(O=u,l.innerText=u.action.name,l.classList.remove("mdc-fab--exited")),n=Date.now()+r,cv.drawContours(e,a,u.nodeIndex,x,2,cv.LINE_8,s,100)):null!=O&&0!=n&&Date.now()>n&&(n=0,O=u,l.classList.add("mdc-fab--exited")),cv.imshow(f,e);const c=100-(Date.now()-t);setTimeout(i,c)}else e.delete(),p.classList.remove("mdc-fab--exited")};i()}catch(t){console.log("navigator.MediaDevices.getUserMedia error: ",t.message,t.name),console.trace(t)}}));l.addEventListener("click",()=>{location.href=O.action.url}),p.addEventListener("click",()=>{E()}),p.style.display="",g.classList.add("mdc-circular-progress--closed"),p.classList.remove("mdc-fab--exited"),d.addEventListener("click",()=>{history.replaceState(null,null," "),w.stop(),d.style.display="none",v.style.display="none",f.style.display="none",m.style.display=""}),"#play"==location.hash&&(yield E())}))}},function(module,exports,__webpack_require__){(function(global){var require,require,f;f=function(){var define,module,exports;return function t(e,n,r){function i(a,s){if(!n[a]){if(!e[a]){if(!s&&"function"==typeof require&&require)return require(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[a]={exports:{}};e[a][0].call(c.exports,(function(t){return i(e[a][1][t]||t)}),c,c.exports,t,e,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e,n){this.videoInput=t,this.outputCanvas=e,this.callback=n,this.streaming=!1,this.onVideoCanPlay=this.onVideoCanPlay.bind(this),this.onVideoStarted=this.onVideoStarted.bind(this),this.onVideoStopped=this.onVideoStopped.bind(this)}return t.prototype.start=function(){this.streaming||this.startCamera("qvga",this.onVideoStarted,this.videoInput)},t.prototype.stop=function(){this.streaming&&(this.stopCamera(),this.onVideoStopped())},t.prototype.startCamera=function(t,e,n){var r=this,i={qvga:{width:{exact:320},height:{exact:240}},vga:{width:{exact:640},height:{exact:480}}}[t];i||(i=!0),navigator.mediaDevices.getUserMedia({video:n,audio:!1}).then((function(t){n.srcObject=t,n.play(),r.videoInput=n,r.stream=t,r.onCameraStartedCallback=e,n.addEventListener("canplay",r.onVideoCanPlay,!1)})).catch((function(t){console.error(t)}))},t.prototype.stopCamera=function(){this.videoInput&&(this.videoInput.pause(),this.videoInput.srcObject=null,this.videoInput.removeEventListener("canplay",this.onVideoCanPlay)),this.stream&&this.stream.getVideoTracks().forEach((function(t){return t.stop()}))},t.prototype.onVideoStarted=function(){this.streaming=!0,this.outputCanvas.width=this.videoInput.videoWidth,this.outputCanvas.height=this.videoInput.videoHeight,this.callback()},t.prototype.onVideoStopped=function(){this.streaming=!1,this.outputCanvas.getContext("2d").clearRect(0,0,this.outputCanvas.width,this.outputCanvas.height),this.stopCamera()},t.prototype.onVideoCanPlay=function(){this.onCameraStartedCallback&&this.onCameraStartedCallback(this.stream,this.videoInput)},t}();n.CameraHelper=r},{}],2:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var i=t("../util/base64"),o=t("../util/imageUtil"),a=t("./imageCreation"),s={};n.renderArrayBufferInCanvas=function(t,e,n){void 0===n&&(n=s),n=r(r({},s),n);var o=i.arrayBufferToUrl(t,e,n.name),a=new Image;return new Promise((function(t){a.onload=function(){n.canvas||(n.canvas=document.createElement("canvas"),n.appendToBody&&document.body.append(n.canvas)),n.canvas.setAttribute("width",a.naturalWidth+""),n.canvas.setAttribute("height",a.naturalHeight+""),n.canvas.getContext("2d").drawImage(a,0,0),t({canvas:n.canvas,width:a.naturalWidth,height:a.naturalHeight})},a.onerror=function(t){console.log("ERROR",t)},a.src=o}))},n.renderSvgInCanvas=function(t,e){return void 0===e&&(e=s),new Promise((function(n){var r=new Image;r.style.display="none",r.onerror=function(t){console.log("ERROR",t),n(void 0)},r.onload=function(t){e.canvas||(e.canvas=document.createElement("canvas"),e.appendToBody&&document.body.append(e.canvas)),e.canvas.setAttribute("width",(r.width||500)+""),e.canvas.setAttribute("height",(r.height||500)+""),e.canvas.getContext("2d").drawImage(r,0,0),n({canvas:e.canvas,width:r.naturalWidth,height:r.naturalHeight}),r.remove()},document.body.append(r),r.src=i.dataToUrl(t,"image/svg+xml",e.name||"image.svg")}))};var u={rgba:!0,forceSameSize:!0};n.renderInCanvas=function(t,e){(e=r(r({},u),e)).canvas||(e.canvas=document.createElement("canvas"),e.appendToBody&&!e.canvas.isConnected&&document.body.append(e.canvas));var n=e.rgba?o.toRgba(t):t,i=a.asHtmlImageData(n),s=e.canvas.getContext("2d");return e.clear&&s.clearRect(0,0,e.canvas.width,e.canvas.height),e.forceSameSize?(e.canvas.width=i.width,e.canvas.height=i.height,s.putImageData(i,0,0,0,0,i.width,i.height)):e.region?s.putImageData(i,e.region.x,e.region.y,e.region.x,e.region.y,e.region.width,e.region.height):s.putImageData(i,0,0),e.rgba&&n.delete(),e.canvas}},{"../util/base64":58,"../util/imageUtil":61,"./imageCreation":3}],3:[function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var o=t("../file"),a=t("../util/imageUtil");n.fromInputFileElement=function(t){return r(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,o.File.fromHtmlFileInputElement(t)];case 1:return[2,e.sent().map((function(t){return t.asMat()}))]}}))}))},n.fetchImageData=function(t){return new Promise((function(e,n){var r=new Image;r.onload=function(t){var n=document.createElement("canvas");n.width=r.width,n.height=r.height;var i=n.getContext("2d");i.drawImage(r,0,0,r.width,r.height);var o=i.getImageData(0,0,n.width,n.height);e(o)},r.onerror=n,r.src=t}))},n.asHtmlImageData=function(t){var e=a.toImageData(t);return new ImageData(e.data,e.width,e.height)}},{"../file":6,"../util/imageUtil":61}],4:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e};Object.defineProperty(n,"__esModule",{value:!0});var o=i(t("./cameraHelper")),a=i(t("./canvasRender")),s=i(t("./imageCreation")),u=i(t("./videoReader")),c=t("./cameraHelper");n.CameraHelper=c.CameraHelper;var f=t("./canvasRender");n.renderArrayBufferInCanvas=f.renderArrayBufferInCanvas,n.renderInCanvas=f.renderInCanvas;var l=t("./imageCreation");n.getHtmlImageData=l.asHtmlImageData,n.fetchImageData=l.fetchImageData,n.fromInputFileElement=l.fromInputFileElement;var p=t("./videoReader");n.VideoReader=p.VideoReader,n.browser=r(r(r(r({},a),o),s),u)},{"./cameraHelper":1,"./canvasRender":2,"./imageCreation":3,"./videoReader":5}],5:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var i=t("../util"),o=function(){function t(e,n,i){void 0===i&&(i=t.defaultOptions),this.video=e,this.canvas=n,this.o=i,this.mat=null,this.streaming=!1,this.o=r(r({},t.defaultOptions),i),this.ctx=n.getContext("2d"),this.size=this.getSize()}return t.prototype.read=function(){this.o.noMatCheck||this.matCheck(),this.ctx.drawImage(this.video,0,0,this.size.width,this.size.height),this.mat.data.set(this.ctx.getImageData(0,0,this.size.width,this.size.height).data)},t.prototype.canPlay=function(){var t=this,e={audio:!1,video:!0};return new Promise((function(n){t.video.addEventListener("canplay",(function(){var e=t.getSize();t.canvas.width=e.width,t.canvas.height=e.height,t.mat=new cv.Mat(e.height,e.width,cv.CV_8UC4),t.streaming=!0,n()}),!1),navigator.mediaDevices.getUserMedia(e).then((function(e){t.stream=t.video.srcObject=e}))}))},t.prototype.stop=function(){this.stream&&(this.stream.getVideoTracks().forEach((function(t){return t.stop()})),this.streaming=!1,i.del(this.mat))},t.prototype.getSize=function(){return this.size||(this.size="videoSize"===this.o.size?{width:this.video.videoWidth,height:this.video.videoHeight}:"video"===this.o.size?{width:this.video.width,height:this.video.height}:{width:this.canvas.width,height:this.canvas.height}),this.size},t.prototype.matCheck=function(){if(!(this.mat instanceof cv.Mat))throw new Error("Please input the valid cv.Mat instance.");if(this.mat.type()!==cv.CV_8UC4)throw new Error("Bad type of input mat: the type should be cv.CV_8UC4.");if(this.mat.cols!==this.size.width||this.mat.rows!==this.size.height)throw new Error("Bad size of input mat: the size should be same as the video.")},t.defaultOptions={size:"canvas",constraints:{audio:!1,video:!0}},t}();n.VideoReader=o},{"../util":62}],6:[function(t,e,n){(function(e){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0});var a=t("assert"),s=o(t("cross-fetch")),u=t("misc-utils-of-mine-generic"),c=t("./browser/imageCreation"),f=t("./format"),l=t("./util/base64"),p=t("./util/fileUtil"),d=t("./util/imageUtil"),h=t("file-type"),m=function(){function t(t,e){this.name=t,this._mat=e}return t.prototype.size=function(){return{width:this._mat.cols,height:this._mat.rows}},t.prototype.getMimeType=function(){return u.getMimeTypeForExtension(this.getExtension())},t.prototype.getExtension=function(){return u.getFileExtension(this.name).toLowerCase()},t.prototype.asMat=function(){return this._mat},t.prototype.asImageData=function(){return d.toImageData(this._mat)},t.prototype.asHTMLImageData=function(){return c.asHtmlImageData(this._mat)},t.prototype.asDataUrl=function(){return"data:"+this.getMimeType()+";"+this.name+";base64,"+this.asBase64()},Object.defineProperty(t.prototype,"width",{get:function(){return this._mat.cols},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this._mat.rows},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"mat",{get:function(){return this._mat},enumerable:!0,configurable:!0}),t.prototype.remove=function(t){return void 0===t&&(t=!0),t&&this.delete(),this.name&&p.isFile(this.name)&&p.removeFile(this.name),this},t.prototype.asArrayBuffer=function(t){return void 0===t&&(t=this.getExtension()),r(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,f.encodeOrThrow(this.asImageData(),t)];case 1:return[2,e.sent()]}}))}))},t.prototype.write=function(t,e){return void 0===t&&(t=this.name),void 0===e&&(e=this.getExtension()),r(this,void 0,void 0,(function(){var n;return i(this,(function(r){switch(r.label){case 0:return[4,this.asArrayBuffer(e)];case 1:return n=r.sent(),p.writeFile(t,new Uint8ClampedArray(n)),[2,this]}}))}))},t.prototype.setMat=function(t){return this.delete(),this._mat=t,this},t.prototype.show=function(t){return cv.imshow(t,this.asMat()),this},t.prototype.asBase64=function(t){return void 0===t&&(t=this.getExtension()),r(this,void 0,void 0,(function(){var e;return i(this,(function(n){switch(n.label){case 0:return[4,this.asArrayBuffer(t)];case 1:return e=n.sent(),[2,l.arrayBufferToBase64(e)]}}))}))},t.prototype.delete=function(){try{this._mat&&this._mat.delete()}catch(t){}},t.prototype.toRgba=function(){var t=d.toRgba(this.mat);return this.mat.delete(),this._mat=t,this},t.prototype.clone=function(e){return void 0===e&&(e=this.name),t.fromMat(this.mat.clone(),e)},t.fromBase64=function(n,r){var i=e.from(n,"base64");return t.fromArrayBuffer(i,r||t.getBufferFileName(i))},t.fromArrayBuffer=function(e,n){return r(this,void 0,void 0,(function(){var r,o,a;return i(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),n=n||t.getBufferFileName(e),r=u.getFileExtension(n),[4,f.decodeOrThrow(e,r)];case 1:return o=i.sent(),[2,t.fromData(o,n)];case 2:throw a=i.sent(),console.error(a),a;case 3:return[2]}}))}))},t.fromArrayBufferView=function(e,n){return r(this,void 0,void 0,(function(){return i(this,(function(r){return[2,t.fromArrayBuffer(e.buffer,n)]}))}))},t.getBufferFileType=function(e){var n=t.fileType(e);if(!n)throw new Error("Could not get file type for buffer");return n},t.fileType=function(t){var e=h(t);return e||l.arrayBufferToString(t).includes("<svg")&&(e={ext:"svg",mime:"image/svg+xml"}),e},t.getBufferFileName=function(e){var n=t.getBufferFileType(e);return u.unique("file")+n.ext},t.fromDataUrl=function(e,n){return r(this,void 0,void 0,(function(){return i(this,(function(r){switch(r.label){case 0:return[4,t.fromBase64(l.urlToBase64(e),n)];case 1:return[2,r.sent()]}}))}))},t.fromHtmlFileInputElement=function(e){var n=this;if(!u.inBrowser())throw new Error("This method is only supported in the browser");return Promise.all(Array.from(e.files).map((function(e){return new Promise((function(o,a){var s=new FileReader;s.addEventListener("loadend",(function(a){return r(n,void 0,void 0,(function(){var n;return i(this,(function(r){switch(r.label){case 0:return n=o,[4,t.fromArrayBuffer(s.result,e.name)];case 1:return[2,n.apply(void 0,[r.sent()])]}}))}))})),s.readAsArrayBuffer(e)}))})))},t.fromCanvas=function(e){if(!u.inBrowser())throw new Error("This method is only supported in the browser");return t.fromMat(cv.imread(e))},t.resolveOne=function(e){return r(this,void 0,void 0,(function(){var n;return i(this,(function(r){switch(r.label){case 0:return[4,t.resolve(e)];case 1:return[2,(n=r.sent()).length>0?n[0]:void 0]}}))}))},t.resolve=function(e){return r(this,void 0,void 0,(function(){var n,o=this;return i(this,(function(s){switch(s.label){case 0:return n=u.asArray(e||[]).filter(u.notUndefined),[4,u.serial(n.map((function(e){return function(){return r(o,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return"string"!=typeof e?[3,5]:p.isFile(e)?[4,t.fromFile(e)]:[3,2];case 1:return[2,n.sent()];case 2:return[4,t.fromUrl(e)];case 3:return[2,n.sent()];case 4:return[3,6];case 5:return a.ok(ArrayBuffer.isView(e._mat.data.buffer)),[2,e];case 6:return[2]}}))}))}})))];case 1:return[2,s.sent().filter(u.notUndefined)]}}))}))},t.isFile=function(t){return!!(t&&t.name&&t._mat&&t._mat.data&&void 0!==t.constructor&&t.asImageData&&t.asMat)},t.asPath=function(t){return"string"==typeof t?t:t.name},t.fromData=function(e,n){return new t(t._buildName(n),cv.matFromImageData(e))},t._buildName=function(t){return t||u.unique("file")+".png"},t.fromMat=function(e,n){return new t(t._buildName(n),e)},t.prototype.toString=function(){return'[File "'+this.name+'"]'},t.fromUrl=function(e,n){return void 0===n&&(n={}),r(this,void 0,void 0,(function(){var r,o;return i(this,(function(i){switch(i.label){case 0:return f.getDefaultCodec(),[4,s.default(e)];case 1:return[4,i.sent().arrayBuffer()];case 2:return r=i.sent(),[4,f.decodeOrThrow(r)];case 3:return o=i.sent(),[2,t.fromData(o,n.name||u.getFileNameFromUrl(e))]}}))}))},t.fromFile=function(e,n){return void 0===n&&(n=u.basename(e)),r(this,void 0,void 0,(function(){var r;return i(this,(function(i){switch(i.label){case 0:return[4,f.decodeOrThrow(p.readFile(e).buffer)];case 1:return r=i.sent(),[2,t.fromData(r,n)]}}))}))},t}();n.File=m}).call(this,t("buffer").Buffer)},{"./browser/imageCreation":3,"./format":9,"./util/base64":58,"./util/fileUtil":59,"./util/imageUtil":61,assert:64,buffer:70,"cross-fetch":71,"file-type":72,"misc-utils-of-mine-generic":92}],7:[function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var o=t("misc-utils-of-mine-generic"),a=t("../browser/canvasRender"),s=t("../file"),u=t("../util/base64"),c=function(){function t(){}return t.prototype.decode=function(t,e){return r(this,void 0,void 0,(function(){var n,r,c,f,l,p,d;return i(this,(function(i){switch(i.label){case 0:return(r=e?o.getMimeTypeForExtension(e):(n=s.File.fileType(t))&&n.mime||void 0)?"image/svg+xml"!==r?[3,2]:[4,a.renderSvgInCanvas(u.arrayBufferToString(t))]:[2];case 1:return d=i.sent(),[3,4];case 2:return[4,a.renderArrayBufferInCanvas(t,r)];case 3:d=i.sent(),i.label=4;case 4:return f=(c=d).canvas,l=c.height,p=c.width,[2,f.getContext("2d").getImageData(0,0,p,l)]}}))}))},t.prototype.encode=function(t,e,n){return r(this,void 0,void 0,(function(){var r,s;return i(this,(function(i){try{return r=cv.matFromImageData(t),s=a.renderInCanvas(r,{forceSameSize:!0,rgba:!0}),r.delete(),[2,new Promise((function(t,r){s.toBlob((function(e){if(!e)return t(void 0);var n=new FileReader;n.onloadend=function(e){t(n.result||void 0)},n.onerror=n.onabort=function(){n.error?r(n.error):t(void 0)},n.readAsArrayBuffer(e)}),o.getMimeTypeForExtension(e)||"image/png",n)}))]}catch(t){console.error(t)}return[2]}))}))},t}();n.CanvasCodec=c},{"../browser/canvasRender":2,"../file":6,"../util/base64":58,"misc-utils-of-mine-generic":92}],8:[function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var o=t("misc-utils-of-mine-generic"),a=t("../file");n.installFormatProxy=function(t){return r(this,void 0,void 0,(function(){return i(this,(function(e){return s.push(t),[2]}))}))},n.unInstallFormatProxies=function(){return r(this,void 0,void 0,(function(){return i(this,(function(t){return s.length=0,[2]}))}))};var s=[],u=[],c=!1;function f(t){return r(this,void 0,void 0,(function(){var e;return i(this,(function(n){switch(n.label){case 0:return"function"!=typeof t?[3,2]:[4,t()];case 1:return e=n.sent(),[3,4];case 2:return[4,t.create()];case 3:e=n.sent(),n.label=4;case 4:return[2,e]}}))}))}function l(){var t=u.length?u[0]:void 0;if(!t)throw new Error("No codec found. you need to provide a proxy and wait for loadFormatProxies()");return t}n.loadFormatProxies=function(){return r(this,void 0,void 0,(function(){var t=this;return i(this,(function(e){switch(e.label){case 0:return c?[3,3]:(c=!0,s.length?[4,o.serial(s.map((function(e){return function(){return r(t,void 0,void 0,(function(){var t;return i(this,(function(n){switch(n.label){case 0:return[4,f(e)];case 1:return t=n.sent(),u.push(t),[2]}}))}))}})))]:[3,2]);case 1:e.sent(),e.label=2;case 2:e.label=3;case 3:return[2]}}))}))},n.unloadFormatProxies=function(){u.length=0},n.getDefaultCodec=l,n.decodeOrThrow=function(t,e){return r(this,void 0,void 0,(function(){var n;return i(this,(function(r){switch(r.label){case 0:return[4,l().decode(t,e)];case 1:return n=r.sent(),o.checkThrow(n,"Fail to decode buffer. "+(e?"requested format: "+e:"")+". Detected format: "+(a.File.getBufferFileType(t)&&a.File.getBufferFileType(t).mime||"unknown")),[2,n]}}))}))},n.encodeOrThrow=function(t,e,n){return r(this,void 0,void 0,(function(){var r;return i(this,(function(i){switch(i.label){case 0:return[4,l().encode(t,e,n)];case 1:return r=i.sent(),o.checkThrow(r,"Fail to encode to requested format "+e+". Given: "+e),[2,r]}}))}))}},{"../file":6,"misc-utils-of-mine-generic":92}],9:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function i(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}var o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e};Object.defineProperty(n,"__esModule",{value:!0}),i(t("./canvasCodec")),i(t("./format")),i(t("./jimpCodec"));var a=o(t("./canvasCodec")),s=o(t("./format")),u=o(t("./jimpCodec"));n.format=r(r(r({},a),s),u)},{"./canvasCodec":7,"./format":8,"./jimpCodec":10}],10:[function(t,e,n){(function(e){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},i=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var a=t("misc-utils-of-mine-generic"),s=function(){function t(t){this.jimp=t}return t.prototype.decode=function(t){return i(this,void 0,void 0,(function(){return o(this,(function(n){switch(n.label){case 0:return[4,this.jimp.create(e.from(t))];case 1:return[2,n.sent().bitmap]}}))}))},t.prototype.encode=function(t,n,s){return i(this,void 0,void 0,(function(){var i;return o(this,(function(o){switch(o.label){case 0:if(!(i=a.getMimeTypeForExtension(n)))throw new Error("format not supported"+n);return[4,new this.jimp(r(r({},t),{data:e.from(t.data.buffer)})).getBufferAsync(i)];case 1:return[2,o.sent()]}}))}))},t}();n.JimpCodec=s}).call(this,t("buffer").Buffer)},{buffer:70,"misc-utils-of-mine-generic":92}],11:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./browser")),r(t("./file")),r(t("./format/")),r(t("./opencvReady")),r(t("./types/opencv")),r(t("./util")),t("./types/_cv")},{"./browser":4,"./file":6,"./format/":9,"./opencvReady":12,"./types/_cv":13,"./types/opencv":52,"./util":62}],12:[function(t,e,n){(function(e){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},o=this&&this.__spreadArrays||function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r};Object.defineProperty(n,"__esModule",{value:!0});var a,s=t("fs"),u=t("misc-utils-of-mine-generic"),c=t("./format"),f=t("./util/misc");n.FS_ROOT="/work",n.getFS=function(){return a};var l=!1;function p(o){var c=this;return new Promise((function(p){var d=o.opencvJsExceptions?"opencv_exception.js":"opencv.js",h=[o.opencvJsLocation,"./node_modules/mirada/dist/src/"+d,"./dist/src/"+d].filter(u.notFalsy),m=u.getGlobal(),v=h.find(s.existsSync),g=v&&f.resolveNodeModule(v);if(!g)throw f.buildError(d+" not found. in any of these: "+h.join(", "));m.Module={preRun:function(){"object"==typeof window||m.Module.FS.analyzePath(n.FS_ROOT).exists||(m.Module.FS.mkdir(n.FS_ROOT),m.Module.FS.mount(m.Module.FS.filesystems.NODEFS,{root:o.cwd||e.cwd()||"."},n.FS_ROOT))},onRuntimeInitialized:function(){return r(c,void 0,void 0,(function(){return i(this,(function(t){return l=!0,a=u.getGlobal().Module.FS,o.onloadCallback&&o.onloadCallback(),p(),[2]}))}))},onAbort:function(t){console.error("Error has occurred in WebAssembly Module",t,t.stack),console.trace()}};try{m.cv=t(g)}catch(t){throw console.error("An error occurred when trying to load "+d+" form "+g,t,t.stack),t}}))}function d(t){var e=this;return new Promise((function(n,o){var s=document.createElement("script");s.setAttribute("async",""),s.setAttribute("type","text/javascript"),s.addEventListener("load",(function(){return r(e,void 0,void 0,(function(){var e,o=this;return i(this,(function(s){return void 0!==(e=u.getGlobal()).cv&&void 0!==e.cv.getBuildInformation?(l=!0,a=u.getGlobal().Module.FS,t.onloadCallback&&t.onloadCallback(),n()):(e.cv=void 0===e.cv?{}:e.cv,e.cv.onRuntimeInitialized=function(){return r(o,void 0,void 0,(function(){return i(this,(function(e){return l=!0,a=u.getGlobal().Module.FS,t.onloadCallback&&t.onloadCallback(),n(),[2]}))}))}),[2]}))}))}));var c=t.opencvJsLocation||(t.opencvJsExceptions?"opencv_exception.js":"opencv.js");s.addEventListener("error",(function(){o("Failed to load "+c)})),s.src=c;var f=document.getElementsByTagName("script")[0];f.parentNode.insertBefore(s,f)}))}n.loadOpencv=function(t){return void 0===t&&(t={}),r(this,void 0,void 0,(function(){var e,n=this;return i(this,(function(s){switch(s.label){case 0:return t.force&&(l=!1,u.getGlobal().Module=void 0,a=void 0),l?(t.onloadCallback&&t.onloadCallback(),[2]):(e=t.formatProxies||o(u.isNode()?[]:[function(){return new c.CanvasCodec}]),[4,u.serial(e.map((function(t){return function(){return r(n,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,c.installFormatProxy(t)];case 1:return e.sent(),[2]}}))}))}})))]);case 1:return s.sent(),[4,c.loadFormatProxies()];case 2:return s.sent(),u.isNode()?[4,p(t)]:[3,4];case 3:return s.sent(),[3,6];case 4:return[4,d(t)];case 5:s.sent(),s.label=6;case 6:return[2]}}))}))}}).call(this,t("_process"))},{"./format":9,"./util/misc":63,_process:121,fs:69,"misc-utils-of-mine-generic":92}],13:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],14:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],15:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("./_types")},{"./_types":35}],16:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],17:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],18:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],19:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("./_types")},{"./_types":35}],20:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],21:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],22:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],23:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],24:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],25:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],26:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],27:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("./_types")},{"./_types":35}],28:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("./_types")},{"./_types":35}],29:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],30:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],31:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],32:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],33:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],34:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./Mat");n.InputArray=r.Mat,n.InputArrayOfArrays=r.Mat,n.InputOutputArray=r.Mat,n.InputOutputArrayOfArrays=r.Mat,n.MatVector=r.Mat,n.OutputArray=r.Mat,n.OutputArrayOfArrays=r.Mat,t("."),t("../_cv")},{".":52,"../_cv":13,"./Mat":27}],35:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./Affine3")),r(t("./Algorithm")),r(t("./AutoBuffer")),r(t("./BFMatcher")),r(t("./BOWTrainer")),r(t("./calib3d")),r(t("./CascadeClassifier")),r(t("./core_array")),r(t("./core_cluster")),r(t("./core_hal_interface")),r(t("./core_utils")),r(t("./DescriptorMatcher")),r(t("./dnn")),r(t("./DynamicBitset")),r(t("./Exception")),r(t("./features2d_draw")),r(t("./FlannBasedMatcher")),r(t("./HOGDescriptor")),r(t("./imgproc_color_conversions")),r(t("./imgproc_draw")),r(t("./imgproc_feature")),r(t("./imgproc_filter")),r(t("./imgproc_hist")),r(t("./imgproc_misc")),r(t("./imgproc_object")),r(t("./imgproc_shape")),r(t("./imgproc_transform")),r(t("./Logger")),r(t("./LshTable")),r(t("./Mat")),r(t("./MatExpr")),r(t("./MatOp")),r(t("./Matx")),r(t("./Node")),r(t("./objdetect")),r(t("./PCA")),r(t("./photo_inpaint")),r(t("./RotatedRect")),r(t("./softdouble")),r(t("./softfloat")),r(t("./video_track")),r(t("./_hacks"))},{"./Affine3":14,"./Algorithm":15,"./AutoBuffer":16,"./BFMatcher":17,"./BOWTrainer":18,"./CascadeClassifier":19,"./DescriptorMatcher":20,"./DynamicBitset":21,"./Exception":22,"./FlannBasedMatcher":23,"./HOGDescriptor":24,"./Logger":25,"./LshTable":26,"./Mat":27,"./MatExpr":28,"./MatOp":29,"./Matx":30,"./Node":31,"./PCA":32,"./RotatedRect":33,"./_hacks":34,"./calib3d":36,"./core_array":37,"./core_cluster":38,"./core_hal_interface":39,"./core_utils":40,"./dnn":41,"./features2d_draw":42,"./imgproc_color_conversions":43,"./imgproc_draw":44,"./imgproc_feature":45,"./imgproc_filter":46,"./imgproc_hist":47,"./imgproc_misc":48,"./imgproc_object":49,"./imgproc_shape":50,"./imgproc_transform":51,"./objdetect":53,"./photo_inpaint":54,"./softdouble":55,"./softfloat":56,"./video_track":57}],36:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],37:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],38:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],39:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],40:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],41:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],42:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],43:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],44:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],45:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],46:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],47:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],48:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],49:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],50:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],51:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],52:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./_hacks")),r(t("./_types"))},{"./_hacks":34,"./_types":35}],53:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],54:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],55:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],56:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],57:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0})},{}],58:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("buffer/");function i(t){return r.Buffer.from(t).toString("base64")}function o(t,e,n){return"data:"+e+(n?";name="+n:"")+";base64,"+t}function a(t){return r.Buffer.from(t).toString("base64")}n.dataToUrl=function(t,e,n){return o(i(t),e,n)},n.dataToBase64=i,n.base64ToUrl=o,n.urlToBase64=function(t){return t.substring(t.indexOf(";base64,")+";base64,".length)},n.getDataUrlFileName=function(t){var e=t&&t.split(";base64,"),n=e.length?e[0].split(";").find((function(t){return t.includes("name=")})):"";return(e=n?n.split("="):[])[e.length-1]},n.arrayBufferToBase64=a,n.arrayBufferToUrl=function(t,e,n){return o(a(t),e,n)},n.arrayBufferToString=function(t){return r.Buffer.from(t).toString()}},{"buffer/":70}],59:[function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t("cross-fetch")),s=t("../opencvReady");function u(t,e){return void 0===e&&(e=cv.FS),e.readFile(f(t))}function c(t){return t.startsWith(s.FS_ROOT+"/")?t.substring((s.FS_ROOT+"/").length,t.length):""+t}function f(t){return t.startsWith(s.FS_ROOT+"/")?t:s.FS_ROOT+"/"+t}function l(t,e,n){void 0===n&&(n=cv.FS),n.writeFile(f(t),e)}function p(t,e){void 0===e&&(e=cv.FS),e.unlink(f(f(t)))}function d(t,e){void 0===e&&(e=cv.FS);try{return e.isDir(e.stat(f(t)).mode)}catch(t){return!1}}function h(t,e){void 0===e&&(e=cv.FS);try{return e.isFile(e.stat(f(t)).mode)}catch(t){return!1}}n.readFile=u,n.getFileName=c,n.getFilePath=f,n.writeFile=l,n.removeFile=p,n.isDir=d,n.isFile=h,n.fileUtil={isDir:d,isFile:h,removeFile:p,writeFile:l,getFilePath:f,readFile:u,getFileName:c},n.loadDataFile=function(t,e){return r(this,void 0,void 0,(function(){var n,r,o,s,u;return i(this,(function(i){switch(i.label){case 0:return e=e||t.substring(t.lastIndexOf("/")+1,t.length),cv.FS.readdir("/").includes(e)?[3,4]:[4,a.default(t)];case 1:return n=i.sent(),o=(r=cv.FS).createDataFile,s=["/",e],u=Uint8ClampedArray.bind,[4,n.arrayBuffer()];case 2:return[4,o.apply(r,s.concat([new(u.apply(Uint8ClampedArray,[void 0,i.sent()])),!0,!1,!1]))];case 3:i.sent(),i.label=4;case 4:return[2,e]}}))}))}},{"../opencvReady":12,"cross-fetch":71}],60:[function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var o=t(".."),a=t("./imageUtil");n.grabCut_obsolete=function(t){return r(this,void 0,void 0,(function(){var e,n,r,s,u,c,f,l,p,d,h;return i(this,(function(i){switch(i.label){case 0:return[4,o.loadOpencv()];case 1:for(i.sent(),e=t.image.asMat(),cv.cvtColor(e,e,cv.COLOR_RGBA2RGB,0),n=new cv.Mat,r=new cv.Mat,s=new cv.Mat,u=new cv.Rect(t.x,t.y,t.width,t.height),cv.grabCut(e,n,u,r,s,1,cv.GC_INIT_WITH_RECT),c=0;c<e.rows;c++)for(f=0;f<e.cols;f++)0!=n.ucharPtr(c,f)[0]&&2!=n.ucharPtr(c,f)[0]||(e.ucharPtr(c,f)[0]=0,e.ucharPtr(c,f)[1]=0,e.ucharPtr(c,f)[2]=0);return t.frameColor&&(l=new cv.Point(u.x,u.y),p=new cv.Point(u.x+u.width,u.y+u.height),cv.rectangle(e,l,p,t.frameColor)),d=a.toRgba(e),h=o.toImageData(d),n.delete(),d.delete(),r.delete(),s.delete(),[2,{image:h}]}}))}))}},{"..":11,"./imageUtil":61}],61:[function(t,e,n){(function(e){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var o,a=t("misc-utils-of-mine-generic"),s=t("../file");function u(t){return{data:new Uint8ClampedArray(t.data),width:t.cols,height:t.rows}}function c(t){return t&&"number"==typeof t.rows&&"number"==typeof t.cols&&"object"==typeof t.data&&"function"==typeof t.copyTo}function f(t){return s.File.isFile(t)?t.asMat():t}function l(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];t.filter((function(t){return!t.isDeleted()})).forEach((function(t){return t.delete()}))}function p(t,e,n,r){for(var i=t.channels(),o=t.data,a=0;a<r.length;a++)o[n*i*t.cols+e*i+a]=r[a]}function d(t,e,n){for(var r=t.channels(),i=t.data,o=[],a=0;a<r;a++)o.push(i[n*r*t.cols+e*r+a]);return o}function h(t){return{rows:t.rows,cols:t.cols,type:t.type(),data:(e=t.data,g.from(e).toString("base64"))};var e}function m(t){return cv.matFromArray(t.rows,t.cols,t.type,(e=t.data,new Uint8Array(g.from(e,"base64"))));var e}function v(t){return t&&"object"==typeof t&&"number"==typeof t.rows&&"number"==typeof t.cols&&void 0!==t.type&&"cols,data,rows,type"===Object.keys(t).sort().join(",")}n.toImageData=u,n.asImageData=u,n.isMat=c,n.toRgba=function(t,e){void 0===e&&(e=new cv.Mat);var n=t.type()%8,r=n<=cv.CV_8S?1:n<=cv.CV_32S?1/256:255,i=n===cv.CV_8S||n===cv.CV_16S?128:0;switch(t.convertTo(e,cv.CV_8U,r,i),e.type()){case cv.CV_8UC1:cv.cvtColor(e,e,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(e,e,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}return e},n.fromFile=function(t){return r(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,s.File.fromFile(t)];case 1:return[2,e.sent().asMat()]}}))}))},n.fromArrayBuffer=function(t){return r(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,s.File.fromArrayBuffer(t)];case 1:return[2,e.sent().asMat()]}}))}))},n.fromUrl=function(t){return r(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,s.File.fromUrl(t)];case 1:return[2,e.sent().asMat()]}}))}))},n.compareL2=function(t,e,n){void 0===n&&(n=!1);var r=f(t),i=f(e);if(r.rows>0&&r.rows==i.rows&&r.cols>0&&r.cols==r.cols){var o=cv.norm1(r,i,cv.NORM_L2)/(r.rows*r.cols);return n&&l(r,i),o}return 1},n.asMat=f,n.del=l,n.set=p,n.get=d,n.map=function(t,e,n){for(var r=0;r<t.rows;r++)for(var i=0;i<t.cols;i++)p(e,i,r,n(d(t,i,r),i,r))},n.noArray=function(){return o||(o=cv.Mat.ones(0,0,cv.CV_8U)),o},n.pointToSize=function(t){return new cv.Size(t.x,t.y)},n.sizeToPoint=function(t){return new cv.Point(t.width,t.height)},n.isSize=function(t){return"object"==typeof t&&"number"==typeof t.width},n.mat2data=h,n.data2mat=m,n.isMatData=v;var g=t("buffer/").Buffer;a.isNode()&&void 0!==g&&(g=e),n.jsonStringifyWithMat=function(t){return JSON.stringify(t,(function(t,e){return c(e)?h(e):e}))},n.jsonParseWithMat=function(t){return JSON.parse(t,(function(t,e){return v(e)?m(e):e}))}}).call(this,t("buffer").Buffer)},{"../file":6,buffer:70,"buffer/":70,"misc-utils-of-mine-generic":92}],62:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}var i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e};Object.defineProperty(n,"__esModule",{value:!0});var o=t("./fileUtil");n.fileUtil=o.fileUtil,n.loadDataFile=o.loadDataFile,r(t("./grabCut")),r(t("./imageUtil"));var a=i(t("./fileUtil"));n.file=a},{"./fileUtil":59,"./grabCut":60,"./imageUtil":61}],63:[function(t,e,n){(function(e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("misc-utils-of-mine-generic"),i=t("path");n.buildError=function(t){return console.error(t),void 0!==t.stack&&console.log((t.stack+"").split("\n").join("\n")),t instanceof Error?t:new Error(t)},n.resolveNodeModule=function(t){var n=r.withoutExtension(i.relative(i.join(e,".."),i.resolve(t)));return n.startsWith(".")||(n="./"+n),n},n.msFrom=function(t){return(a()-t)/1e6},n.timeFrom=function(t){return((a()-t)/1e6).toPrecision(1)+" ms"};var o="undefined"!=typeof performance&&"function"==typeof performance.now;function a(){return o?performance.now():0}n.now=a}).call(this,"/dist/src/util")},{"misc-utils-of-mine-generic":92,path:120}],64:[function(t,e,n){(function(n){"use strict";var r=t("object-assign");function i(t,e){if(t===e)return 0;for(var n=t.length,r=e.length,i=0,o=Math.min(n,r);i<o;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0}function o(t){return n.Buffer&&"function"==typeof n.Buffer.isBuffer?n.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var a=t("util/"),s=Object.prototype.hasOwnProperty,u=Array.prototype.slice,c="foo"===function(){}.name;function f(t){return Object.prototype.toString.call(t)}function l(t){return!o(t)&&"function"==typeof n.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer)))}var p=e.exports=y,d=/\s*function\s+([^\(\s]*)\s*/;function h(t){if(a.isFunction(t)){if(c)return t.name;var e=t.toString().match(d);return e&&e[1]}}function m(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function v(t){if(c||!a.isFunction(t))return a.inspect(t);var e=h(t);return"[Function"+(e?": "+e:"")+"]"}function g(t,e,n,r,i){throw new p.AssertionError({message:n,actual:t,expected:e,operator:r,stackStartFunction:i})}function y(t,e){t||g(t,!0,e,"==",p.ok)}function b(t,e,n,r){if(t===e)return!0;if(o(t)&&o(e))return 0===i(t,e);if(a.isDate(t)&&a.isDate(e))return t.getTime()===e.getTime();if(a.isRegExp(t)&&a.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(l(t)&&l(e)&&f(t)===f(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===i(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(o(t)!==o(e))return!1;var s=(r=r||{actual:[],expected:[]}).actual.indexOf(t);return-1!==s&&s===r.expected.indexOf(e)||(r.actual.push(t),r.expected.push(e),function(t,e,n,r){if(null==t||null==e)return!1;if(a.isPrimitive(t)||a.isPrimitive(e))return t===e;if(n&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var i=w(t),o=w(e);if(i&&!o||!i&&o)return!1;if(i)return t=u.call(t),e=u.call(e),b(t,e,n);var s,c,f=O(t),l=O(e);if(f.length!==l.length)return!1;for(f.sort(),l.sort(),c=f.length-1;c>=0;c--)if(f[c]!==l[c])return!1;for(c=f.length-1;c>=0;c--)if(s=f[c],!b(t[s],e[s],n,r))return!1;return!0}(t,e,n,r))}return n?t===e:t==e}function w(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function _(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function x(t,e,n,r){var i;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(r=n,n=null),i=function(t){var e;try{t()}catch(t){e=t}return e}(e),r=(n&&n.name?" ("+n.name+").":".")+(r?" "+r:"."),t&&!i&&g(i,n,"Missing expected exception"+r);var o="string"==typeof r,s=!t&&i&&!n;if((!t&&a.isError(i)&&o&&_(i,n)||s)&&g(i,n,"Got unwanted exception"+r),t&&i&&n&&!_(i,n)||!t&&i)throw i}p.AssertionError=function(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=function(t){return m(v(t.actual),128)+" "+t.operator+" "+m(v(t.expected),128)}(this),this.generatedMessage=!0);var e=t.stackStartFunction||g;if(Error.captureStackTrace)Error.captureStackTrace(this,e);else{var n=new Error;if(n.stack){var r=n.stack,i=h(e),o=r.indexOf("\n"+i);if(o>=0){var a=r.indexOf("\n",o+1);r=r.substring(a+1)}this.stack=r}}},a.inherits(p.AssertionError,Error),p.fail=g,p.ok=y,p.equal=function(t,e,n){t!=e&&g(t,e,n,"==",p.equal)},p.notEqual=function(t,e,n){t==e&&g(t,e,n,"!=",p.notEqual)},p.deepEqual=function(t,e,n){b(t,e,!1)||g(t,e,n,"deepEqual",p.deepEqual)},p.deepStrictEqual=function(t,e,n){b(t,e,!0)||g(t,e,n,"deepStrictEqual",p.deepStrictEqual)},p.notDeepEqual=function(t,e,n){b(t,e,!1)&&g(t,e,n,"notDeepEqual",p.notDeepEqual)},p.notDeepStrictEqual=function t(e,n,r){b(e,n,!0)&&g(e,n,r,"notDeepStrictEqual",t)},p.strictEqual=function(t,e,n){t!==e&&g(t,e,n,"===",p.strictEqual)},p.notStrictEqual=function(t,e,n){t===e&&g(t,e,n,"!==",p.notStrictEqual)},p.throws=function(t,e,n){x(!0,t,e,n)},p.doesNotThrow=function(t,e,n){x(!1,t,e,n)},p.ifError=function(t){if(t)throw t},p.strict=r((function t(e,n){e||g(e,!0,n,"==",t)}),p,{equal:p.strictEqual,deepEqual:p.deepStrictEqual,notEqual:p.notStrictEqual,notDeepEqual:p.notDeepStrictEqual}),p.strict.strict=p.strict;var O=Object.keys||function(t){var e=[];for(var n in t)s.call(t,n)&&e.push(n);return e}}).call(this,void 0!==global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"object-assign":119,"util/":67}],65:[function(t,e,n){"function"==typeof Object.create?e.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},{}],66:[function(t,e,n){e.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},{}],67:[function(t,e,n){(function(e,r){var i=/%[sdj%]/g;n.format=function(t){if(!g(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(s(arguments[n]));return e.join(" ")}n=1;for(var r=arguments,o=r.length,a=String(t).replace(i,(function(t){if("%%"===t)return"%";if(n>=o)return t;switch(t){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(t){return"[Circular]"}default:return t}})),u=r[n];n<o;u=r[++n])m(u)||!w(u)?a+=" "+u:a+=" "+s(u);return a},n.deprecate=function(t,i){if(y(r.process))return function(){return n.deprecate(t,i).apply(this,arguments)};if(!0===e.noDeprecation)return t;var o=!1;return function(){if(!o){if(e.throwDeprecation)throw new Error(i);e.traceDeprecation?console.trace(i):console.error(i),o=!0}return t.apply(this,arguments)}};var o,a={};function s(t,e){var r={seen:[],stylize:c};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),h(e)?r.showHidden=e:e&&n._extend(r,e),y(r.showHidden)&&(r.showHidden=!1),y(r.depth)&&(r.depth=2),y(r.colors)&&(r.colors=!1),y(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=u),f(r,t,r.depth)}function u(t,e){var n=s.styles[e];return n?"["+s.colors[n][0]+"m"+t+"["+s.colors[n][1]+"m":t}function c(t,e){return t}function f(t,e,r){if(t.customInspect&&e&&O(e.inspect)&&e.inspect!==n.inspect&&(!e.constructor||e.constructor.prototype!==e)){var i=e.inspect(r,t);return g(i)||(i=f(t,i,r)),i}var o=function(t,e){if(y(e))return t.stylize("undefined","undefined");if(g(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return v(e)?t.stylize(""+e,"number"):h(e)?t.stylize(""+e,"boolean"):m(e)?t.stylize("null","null"):void 0}(t,e);if(o)return o;var a=Object.keys(e),s=function(t){var e={};return t.forEach((function(t,n){e[t]=!0})),e}(a);if(t.showHidden&&(a=Object.getOwnPropertyNames(e)),x(e)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return l(e);if(0===a.length){if(O(e)){var u=e.name?": "+e.name:"";return t.stylize("[Function"+u+"]","special")}if(b(e))return t.stylize(RegExp.prototype.toString.call(e),"regexp");if(_(e))return t.stylize(Date.prototype.toString.call(e),"date");if(x(e))return l(e)}var c,w="",E=!1,A=["{","}"];return d(e)&&(E=!0,A=["[","]"]),O(e)&&(w=" [Function"+(e.name?": "+e.name:"")+"]"),b(e)&&(w=" "+RegExp.prototype.toString.call(e)),_(e)&&(w=" "+Date.prototype.toUTCString.call(e)),x(e)&&(w=" "+l(e)),0!==a.length||E&&0!=e.length?r<0?b(e)?t.stylize(RegExp.prototype.toString.call(e),"regexp"):t.stylize("[Object]","special"):(t.seen.push(e),c=E?function(t,e,n,r,i){for(var o=[],a=0,s=e.length;a<s;++a)C(e,String(a))?o.push(p(t,e,n,r,String(a),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(p(t,e,n,r,i,!0))})),o}(t,e,r,s,a):a.map((function(n){return p(t,e,r,s,n,E)})),t.seen.pop(),function(t,e,n){return t.reduce((function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1]}(c,w,A)):A[0]+w+A[1]}function l(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,n,r,i,o){var a,s,u;if((u=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?s=u.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):u.set&&(s=t.stylize("[Setter]","special")),C(r,i)||(a="["+i+"]"),s||(t.seen.indexOf(u.value)<0?(s=m(n)?f(t,u.value,null):f(t,u.value,n-1)).indexOf("\n")>-1&&(s=o?s.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+s.split("\n").map((function(t){return"   "+t})).join("\n")):s=t.stylize("[Circular]","special")),y(a)){if(o&&i.match(/^\d+$/))return s;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=t.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=t.stylize(a,"string"))}return a+": "+s}function d(t){return Array.isArray(t)}function h(t){return"boolean"==typeof t}function m(t){return null===t}function v(t){return"number"==typeof t}function g(t){return"string"==typeof t}function y(t){return void 0===t}function b(t){return w(t)&&"[object RegExp]"===E(t)}function w(t){return"object"==typeof t&&null!==t}function _(t){return w(t)&&"[object Date]"===E(t)}function x(t){return w(t)&&("[object Error]"===E(t)||t instanceof Error)}function O(t){return"function"==typeof t}function E(t){return Object.prototype.toString.call(t)}function A(t){return t<10?"0"+t.toString(10):t.toString(10)}n.debuglog=function(t){if(y(o)&&(o=e.env.NODE_DEBUG||""),t=t.toUpperCase(),!a[t])if(new RegExp("\\b"+t+"\\b","i").test(o)){var r=e.pid;a[t]=function(){var e=n.format.apply(n,arguments);console.error("%s %d: %s",t,r,e)}}else a[t]=function(){};return a[t]},n.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},n.isArray=d,n.isBoolean=h,n.isNull=m,n.isNullOrUndefined=function(t){return null==t},n.isNumber=v,n.isString=g,n.isSymbol=function(t){return"symbol"==typeof t},n.isUndefined=y,n.isRegExp=b,n.isObject=w,n.isDate=_,n.isError=x,n.isFunction=O,n.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},n.isBuffer=t("./support/isBuffer");var j=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function M(){var t=new Date,e=[A(t.getHours()),A(t.getMinutes()),A(t.getSeconds())].join(":");return[t.getDate(),j[t.getMonth()],e].join(" ")}function C(t,e){return Object.prototype.hasOwnProperty.call(t,e)}n.log=function(){console.log("%s - %s",M(),n.format.apply(n,arguments))},n.inherits=t("inherits"),n._extend=function(t,e){if(!e||!w(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t}}).call(this,t("_process"),void 0!==global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./support/isBuffer":66,_process:121,inherits:65}],68:[function(t,e,n){"use strict";n.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},n.toByteArray=function(t){var e,n,r=c(t),a=r[0],s=r[1],u=new o(function(t,e,n){return 3*(e+n)/4-n}(0,a,s)),f=0,l=s>0?a-4:a;for(n=0;n<l;n+=4)e=i[t.charCodeAt(n)]<<18|i[t.charCodeAt(n+1)]<<12|i[t.charCodeAt(n+2)]<<6|i[t.charCodeAt(n+3)],u[f++]=e>>16&255,u[f++]=e>>8&255,u[f++]=255&e;return 2===s&&(e=i[t.charCodeAt(n)]<<2|i[t.charCodeAt(n+1)]>>4,u[f++]=255&e),1===s&&(e=i[t.charCodeAt(n)]<<10|i[t.charCodeAt(n+1)]<<4|i[t.charCodeAt(n+2)]>>2,u[f++]=e>>8&255,u[f++]=255&e),u},n.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],a=0,s=n-i;a<s;a+=16383)o.push(f(t,a,a+16383>s?s:a+16383));return 1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+"==")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),o.join("")};for(var r=[],i=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=a.length;s<u;++s)r[s]=a[s],i[a.charCodeAt(s)]=s;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function f(t,e,n){for(var i,o,a=[],s=e;s<n;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),a.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return a.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},{}],69:[function(t,e,n){},{}],70:[function(t,e,n){(function(e){"use strict";var r=t("base64-js"),i=t("ieee754"),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function a(t){if(t>2147483647)throw new RangeError('The value "'+t+'" is invalid for option "size"');var n=new Uint8Array(t);return Object.setPrototypeOf(n,e.prototype),n}function e(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return c(t)}return s(t,e,n)}function s(t,n,r){if("string"==typeof t)return function(t,n){if("string"==typeof n&&""!==n||(n="utf8"),!e.isEncoding(n))throw new TypeError("Unknown encoding: "+n);var r=0|p(t,n),i=a(r),o=i.write(t,n);return o!==r&&(i=i.slice(0,o)),i}(t,n);if(ArrayBuffer.isView(t))return f(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(L(t,ArrayBuffer)||t&&L(t.buffer,ArrayBuffer))return function(t,n,r){if(n<0||t.byteLength<n)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<n+(r||0))throw new RangeError('"length" is outside of buffer bounds');var i;return i=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),Object.setPrototypeOf(i,e.prototype),i}(t,n,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return e.from(i,n,r);var o=function(t){if(e.isBuffer(t)){var n=0|l(t.length),r=a(n);return 0===r.length||t.copy(r,0,0,n),r}return void 0!==t.length?"number"!=typeof t.length||U(t.length)?a(0):f(t):"Buffer"===t.type&&Array.isArray(t.data)?f(t.data):void 0}(t);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return e.from(t[Symbol.toPrimitive]("string"),n,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function u(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function c(t){return u(t),a(t<0?0:0|l(t))}function f(t){for(var e=t.length<0?0:0|l(t.length),n=a(e),r=0;r<e;r+=1)n[r]=255&t[r];return n}function l(t){if(t>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|t}function p(t,n){if(e.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||L(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var r=t.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===r)return 0;for(var o=!1;;)switch(n){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return R(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return k(t).length;default:if(o)return i?-1:R(t).length;n=(""+n).toLowerCase(),o=!0}}function d(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return M(this,e,n);case"utf8":case"utf-8":return E(this,e,n);case"ascii":return A(this,e,n);case"latin1":case"binary":return j(this,e,n);case"base64":return O(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function h(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function m(t,n,r,i,o){if(0===t.length)return-1;if("string"==typeof r?(i=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),U(r=+r)&&(r=o?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(o)return-1;r=t.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof n&&(n=e.from(n,i)),e.isBuffer(n))return 0===n.length?-1:v(t,n,r,i,o);if("number"==typeof n)return n&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,n,r):Uint8Array.prototype.lastIndexOf.call(t,n,r):v(t,[n],r,i,o);throw new TypeError("val must be string, number or Buffer")}function v(t,e,n,r,i){var o,a=1,s=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;a=2,s/=2,u/=2,n/=2}function c(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}if(i){var f=-1;for(o=n;o<s;o++)if(c(t,o)===c(e,-1===f?0:o-f)){if(-1===f&&(f=o),o-f+1===u)return f*a}else-1!==f&&(o-=o-f),f=-1}else for(n+u>s&&(n=s-u),o=n;o>=0;o--){for(var l=!0,p=0;p<u;p++)if(c(t,o+p)!==c(e,p)){l=!1;break}if(l)return o}return-1}function g(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=e.length;r>o/2&&(r=o/2);for(var a=0;a<r;++a){var s=parseInt(e.substr(2*a,2),16);if(U(s))return a;t[n+a]=s}return a}function y(t,e,n,r){return F(R(e,t.length-n),t,n,r)}function b(t,e,n,r){return F(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function w(t,e,n,r){return b(t,e,n,r)}function _(t,e,n,r){return F(k(e),t,n,r)}function x(t,e,n,r){return F(function(t,e){for(var n,r,i,o=[],a=0;a<t.length&&!((e-=2)<0);++a)n=t.charCodeAt(a),r=n>>8,i=n%256,o.push(i),o.push(r);return o}(e,t.length-n),t,n,r)}function O(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function E(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o,a,s,u,c=t[i],f=null,l=c>239?4:c>223?3:c>191?2:1;if(i+l<=n)switch(l){case 1:c<128&&(f=c);break;case 2:128==(192&(o=t[i+1]))&&(u=(31&c)<<6|63&o)>127&&(f=u);break;case 3:o=t[i+1],a=t[i+2],128==(192&o)&&128==(192&a)&&(u=(15&c)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(f=u);break;case 4:o=t[i+1],a=t[i+2],s=t[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&c)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(f=u)}null===f?(f=65533,l=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),i+=l}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}function A(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function j(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function M(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i="",o=e;o<n;++o)i+=N[t[o]];return i}function C(t,e,n){for(var r=t.slice(e,n),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function S(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function T(t,n,r,i,o,a){if(!e.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>o||n<a)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}function P(t,e,n,r,i,o){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function I(t,e,n,r,o){return e=+e,n>>>=0,o||P(t,0,n,4),i.write(t,e,n,r,23,4),n+4}function B(t,e,n,r,o){return e=+e,n>>>=0,o||P(t,0,n,8),i.write(t,e,n,r,52,8),n+8}n.Buffer=e,n.SlowBuffer=function(t){return+t!=t&&(t=0),e.alloc(+t)},n.INSPECT_MAX_BYTES=50,n.kMaxLength=2147483647,e.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),e.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(e.prototype,"parent",{enumerable:!0,get:function(){if(e.isBuffer(this))return this.buffer}}),Object.defineProperty(e.prototype,"offset",{enumerable:!0,get:function(){if(e.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&e[Symbol.species]===e&&Object.defineProperty(e,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),e.poolSize=8192,e.from=function(t,e,n){return s(t,e,n)},Object.setPrototypeOf(e.prototype,Uint8Array.prototype),Object.setPrototypeOf(e,Uint8Array),e.alloc=function(t,e,n){return function(t,e,n){return u(t),t<=0?a(t):void 0!==e?"string"==typeof n?a(t).fill(e,n):a(t).fill(e):a(t)}(t,e,n)},e.allocUnsafe=function(t){return c(t)},e.allocUnsafeSlow=function(t){return c(t)},e.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==e.prototype},e.compare=function(t,n){if(L(t,Uint8Array)&&(t=e.from(t,t.offset,t.byteLength)),L(n,Uint8Array)&&(n=e.from(n,n.offset,n.byteLength)),!e.isBuffer(t)||!e.isBuffer(n))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===n)return 0;for(var r=t.length,i=n.length,o=0,a=Math.min(r,i);o<a;++o)if(t[o]!==n[o]){r=t[o],i=n[o];break}return r<i?-1:i<r?1:0},e.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},e.concat=function(t,n){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return e.alloc(0);var r;if(void 0===n)for(n=0,r=0;r<t.length;++r)n+=t[r].length;var i=e.allocUnsafe(n),o=0;for(r=0;r<t.length;++r){var a=t[r];if(L(a,Uint8Array)&&(a=e.from(a)),!e.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,o),o+=a.length}return i},e.byteLength=p,e.prototype._isBuffer=!0,e.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)h(this,e,e+1);return this},e.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)h(this,e,e+3),h(this,e+1,e+2);return this},e.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)h(this,e,e+7),h(this,e+1,e+6),h(this,e+2,e+5),h(this,e+3,e+4);return this},e.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?E(this,0,t):d.apply(this,arguments)},e.prototype.toLocaleString=e.prototype.toString,e.prototype.equals=function(t){if(!e.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===e.compare(this,t)},e.prototype.inspect=function(){var t="",e=n.INSPECT_MAX_BYTES;return t=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(t+=" ... "),"<Buffer "+t+">"},o&&(e.prototype[o]=e.prototype.inspect),e.prototype.compare=function(t,n,r,i,o){if(L(t,Uint8Array)&&(t=e.from(t,t.offset,t.byteLength)),!e.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===n&&(n=0),void 0===r&&(r=t?t.length:0),void 0===i&&(i=0),void 0===o&&(o=this.length),n<0||r>t.length||i<0||o>this.length)throw new RangeError("out of range index");if(i>=o&&n>=r)return 0;if(i>=o)return-1;if(n>=r)return 1;if(this===t)return 0;for(var a=(o>>>=0)-(i>>>=0),s=(r>>>=0)-(n>>>=0),u=Math.min(a,s),c=this.slice(i,o),f=t.slice(n,r),l=0;l<u;++l)if(c[l]!==f[l]){a=c[l],s=f[l];break}return a<s?-1:s<a?1:0},e.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},e.prototype.indexOf=function(t,e,n){return m(this,t,e,n,!0)},e.prototype.lastIndexOf=function(t,e,n){return m(this,t,e,n,!1)},e.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return g(this,t,e,n);case"utf8":case"utf-8":return y(this,t,e,n);case"ascii":return b(this,t,e,n);case"latin1":case"binary":return w(this,t,e,n);case"base64":return _(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return x(this,t,e,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},e.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},e.prototype.slice=function(t,n){var r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(n=void 0===n?r:~~n)<0?(n+=r)<0&&(n=0):n>r&&(n=r),n<t&&(n=t);var i=this.subarray(t,n);return Object.setPrototypeOf(i,e.prototype),i},e.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||S(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r},e.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||S(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},e.prototype.readUInt8=function(t,e){return t>>>=0,e||S(t,1,this.length),this[t]},e.prototype.readUInt16LE=function(t,e){return t>>>=0,e||S(t,2,this.length),this[t]|this[t+1]<<8},e.prototype.readUInt16BE=function(t,e){return t>>>=0,e||S(t,2,this.length),this[t]<<8|this[t+1]},e.prototype.readUInt32LE=function(t,e){return t>>>=0,e||S(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},e.prototype.readUInt32BE=function(t,e){return t>>>=0,e||S(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},e.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||S(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*e)),r},e.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||S(t,e,this.length);for(var r=e,i=1,o=this[t+--r];r>0&&(i*=256);)o+=this[t+--r]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*e)),o},e.prototype.readInt8=function(t,e){return t>>>=0,e||S(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},e.prototype.readInt16LE=function(t,e){t>>>=0,e||S(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},e.prototype.readInt16BE=function(t,e){t>>>=0,e||S(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},e.prototype.readInt32LE=function(t,e){return t>>>=0,e||S(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},e.prototype.readInt32BE=function(t,e){return t>>>=0,e||S(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},e.prototype.readFloatLE=function(t,e){return t>>>=0,e||S(t,4,this.length),i.read(this,t,!0,23,4)},e.prototype.readFloatBE=function(t,e){return t>>>=0,e||S(t,4,this.length),i.read(this,t,!1,23,4)},e.prototype.readDoubleLE=function(t,e){return t>>>=0,e||S(t,8,this.length),i.read(this,t,!0,52,8)},e.prototype.readDoubleBE=function(t,e){return t>>>=0,e||S(t,8,this.length),i.read(this,t,!1,52,8)},e.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||T(this,t,e,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[e]=255&t;++o<n&&(i*=256);)this[e+o]=t/i&255;return e+n},e.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||T(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},e.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,1,255,0),this[e]=255&t,e+1},e.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},e.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},e.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},e.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},e.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);T(this,t,e,n,i-1,-i)}var o=0,a=1,s=0;for(this[e]=255&t;++o<n&&(a*=256);)t<0&&0===s&&0!==this[e+o-1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+n},e.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);T(this,t,e,n,i-1,-i)}var o=n-1,a=1,s=0;for(this[e+o]=255&t;--o>=0&&(a*=256);)t<0&&0===s&&0!==this[e+o+1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+n},e.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},e.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},e.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},e.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},e.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||T(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},e.prototype.writeFloatLE=function(t,e,n){return I(this,t,e,!0,n)},e.prototype.writeFloatBE=function(t,e,n){return I(this,t,e,!1,n)},e.prototype.writeDoubleLE=function(t,e,n){return B(this,t,e,!0,n)},e.prototype.writeDoubleBE=function(t,e,n){return B(this,t,e,!1,n)},e.prototype.copy=function(t,n,r,i){if(!e.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),i||0===i||(i=this.length),n>=t.length&&(n=t.length),n||(n=0),i>0&&i<r&&(i=r),i===r)return 0;if(0===t.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-n<i-r&&(i=t.length-n+r);var o=i-r;if(this===t&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(n,r,i);else if(this===t&&r<n&&n<i)for(var a=o-1;a>=0;--a)t[a+n]=this[a+r];else Uint8Array.prototype.set.call(t,this.subarray(r,i),n);return o},e.prototype.fill=function(t,n,r,i){if("string"==typeof t){if("string"==typeof n?(i=n,n=0,r=this.length):"string"==typeof r&&(i=r,r=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!e.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===t.length){var o=t.charCodeAt(0);("utf8"===i&&o<128||"latin1"===i)&&(t=o)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(n<0||this.length<n||this.length<r)throw new RangeError("Out of range index");if(r<=n)return this;var a;if(n>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(a=n;a<r;++a)this[a]=t;else{var s=e.isBuffer(t)?t:e.from(t,i),u=s.length;if(0===u)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<r-n;++a)this[a+n]=s[a%u]}return this};var D=/[^+\/0-9A-Za-z-_]/g;function R(t,e){var n;e=e||1/0;for(var r=t.length,i=null,o=[],a=0;a<r;++a){if((n=t.charCodeAt(a))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function k(t){return r.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(D,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function F(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}function L(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function U(t){return t!=t}var N=function(){for(var t=new Array(256),e=0;e<16;++e)for(var n=16*e,r=0;r<16;++r)t[n+r]="0123456789abcdef"[e]+"0123456789abcdef"[r];return t}()}).call(this,t("buffer").Buffer)},{"base64-js":68,buffer:70,ieee754:75}],71:[function(t,e,n){var r=function(t){function e(){this.fetch=!1,this.DOMException=t.DOMException}return e.prototype=t,new e}("undefined"!=typeof self?self:this);!function(t){!function(e){var n="URLSearchParams"in t,r="Symbol"in t&&"iterator"in Symbol,i="FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),o="FormData"in t,a="ArrayBuffer"in t;if(a)var s=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],u=ArrayBuffer.isView||function(t){return t&&s.indexOf(Object.prototype.toString.call(t))>-1};function c(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function f(t){return"string"!=typeof t&&(t=String(t)),t}function l(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function p(t){this.map={},t instanceof p?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function d(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function h(t){return new Promise((function(e,n){t.onload=function(){e(t.result)},t.onerror=function(){n(t.error)}}))}function m(t){var e=new FileReader,n=h(e);return e.readAsArrayBuffer(t),n}function v(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function g(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?"string"==typeof t?this._bodyText=t:i&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:o&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:n&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():a&&i&&(e=t)&&DataView.prototype.isPrototypeOf(e)?(this._bodyArrayBuffer=v(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):a&&(ArrayBuffer.prototype.isPrototypeOf(t)||u(t))?this._bodyArrayBuffer=v(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText="",this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):n&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var t=d(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?d(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(m)}),this.text=function(){var t,e,n,r=d(this);if(r)return r;if(this._bodyBlob)return t=this._bodyBlob,e=new FileReader,n=h(e),e.readAsText(t),n;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),n=new Array(e.length),r=0;r<e.length;r++)n[r]=String.fromCharCode(e[r]);return n.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(w)}),this.json=function(){return this.text().then(JSON.parse)},this}p.prototype.append=function(t,e){t=c(t),e=f(e);var n=this.map[t];this.map[t]=n?n+", "+e:e},p.prototype.delete=function(t){delete this.map[c(t)]},p.prototype.get=function(t){return t=c(t),this.has(t)?this.map[t]:null},p.prototype.has=function(t){return this.map.hasOwnProperty(c(t))},p.prototype.set=function(t,e){this.map[c(t)]=f(e)},p.prototype.forEach=function(t,e){for(var n in this.map)this.map.hasOwnProperty(n)&&t.call(e,this.map[n],n,this)},p.prototype.keys=function(){var t=[];return this.forEach((function(e,n){t.push(n)})),l(t)},p.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),l(t)},p.prototype.entries=function(){var t=[];return this.forEach((function(e,n){t.push([n,e])})),l(t)},r&&(p.prototype[Symbol.iterator]=p.prototype.entries);var y=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function b(t,e){var n,r,i=(e=e||{}).body;if(t instanceof b){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new p(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,i||null==t._bodyInit||(i=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new p(e.headers)),this.method=(n=e.method||this.method||"GET",r=n.toUpperCase(),y.indexOf(r)>-1?r:n),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&i)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(i)}function w(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var n=t.split("="),r=n.shift().replace(/\+/g," "),i=n.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(i))}})),e}function _(t,e){e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new p(e.headers),this.url=e.url||"",this._initBody(t)}b.prototype.clone=function(){return new b(this,{body:this._bodyInit})},g.call(b.prototype),g.call(_.prototype),_.prototype.clone=function(){return new _(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new p(this.headers),url:this.url})},_.error=function(){var t=new _(null,{status:0,statusText:""});return t.type="error",t};var x=[301,302,303,307,308];_.redirect=function(t,e){if(-1===x.indexOf(e))throw new RangeError("Invalid status code");return new _(null,{status:e,headers:{location:t}})},e.DOMException=t.DOMException;try{new e.DOMException}catch(t){e.DOMException=function(t,e){this.message=t,this.name=e;var n=Error(t);this.stack=n.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function O(t,n){return new Promise((function(r,o){var a=new b(t,n);if(a.signal&&a.signal.aborted)return o(new e.DOMException("Aborted","AbortError"));var s=new XMLHttpRequest;function u(){s.abort()}s.onload=function(){var t,e,n={status:s.status,statusText:s.statusText,headers:(t=s.getAllResponseHeaders()||"",e=new p,t.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(t){var n=t.split(":"),r=n.shift().trim();if(r){var i=n.join(":").trim();e.append(r,i)}})),e)};n.url="responseURL"in s?s.responseURL:n.headers.get("X-Request-URL");var i="response"in s?s.response:s.responseText;r(new _(i,n))},s.onerror=function(){o(new TypeError("Network request failed"))},s.ontimeout=function(){o(new TypeError("Network request failed"))},s.onabort=function(){o(new e.DOMException("Aborted","AbortError"))},s.open(a.method,a.url,!0),"include"===a.credentials?s.withCredentials=!0:"omit"===a.credentials&&(s.withCredentials=!1),"responseType"in s&&i&&(s.responseType="blob"),a.headers.forEach((function(t,e){s.setRequestHeader(e,t)})),a.signal&&(a.signal.addEventListener("abort",u),s.onreadystatechange=function(){4===s.readyState&&a.signal.removeEventListener("abort",u)}),s.send(void 0===a._bodyInit?null:a._bodyInit)}))}O.polyfill=!0,t.fetch||(t.fetch=O,t.Headers=p,t.Request=b,t.Response=_),e.Headers=p,e.Request=b,e.Response=_,e.fetch=O}({})}(r),delete r.fetch.polyfill,(n=r.fetch).default=r.fetch,n.fetch=r.fetch,n.Headers=r.Headers,n.Request=r.Request,n.Response=r.Response,e.exports=n},{}],72:[function(require,module,exports){(function(Buffer){"use strict";const{multiByteIndexOf:multiByteIndexOf,stringToBytes:stringToBytes,readUInt64LE:readUInt64LE,tarHeaderChecksumMatches:tarHeaderChecksumMatches,uint8ArrayUtf8ByteString:uint8ArrayUtf8ByteString}=require("./util"),supported=require("./supported"),xpiZipFilename=stringToBytes("META-INF/mozilla.rsa"),oxmlContentTypes=stringToBytes("[Content_Types].xml"),oxmlRels=stringToBytes("_rels/.rels"),fileType=t=>{if(!(t instanceof Uint8Array||t instanceof ArrayBuffer||Buffer.isBuffer(t)))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof t}\``);const e=t instanceof Uint8Array?t:new Uint8Array(t);if(!(e&&e.length>1))return;const n=(t,n)=>{n={offset:0,...n};for(let r=0;r<t.length;r++)if(n.mask){if(t[r]!==(n.mask[r]&e[r+n.offset]))return!1}else if(t[r]!==e[r+n.offset])return!1;return!0},r=(t,e)=>n(stringToBytes(t),e);if(n([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(n([137,80,78,71,13,10,26,10])){const t=33,n=e.findIndex((n,r)=>r>=t&&73===e[r]&&68===e[r+1]&&65===e[r+2]&&84===e[r+3]),r=e.subarray(t,n);return r.findIndex((t,e)=>97===r[e]&&99===r[e+1]&&84===r[e+2]&&76===r[e+3])>=0?{ext:"apng",mime:"image/apng"}:{ext:"png",mime:"image/png"}}if(n([71,73,70]))return{ext:"gif",mime:"image/gif"};if(n([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(n([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((n([73,73,42,0])||n([77,77,0,42]))&&n([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n([73,73,82,79,8,0,0,0,24]))return{ext:"orf",mime:"image/x-olympus-orf"};if(n([73,73,42,0])&&(n([16,251,134,1],{offset:4})||n([8,0,0,0,19,0],{offset:4})||n([8,0,0,0,18,0],{offset:4})))return{ext:"arw",mime:"image/x-sony-arw"};if(n([73,73,42,0,8,0,0,0])&&(n([45,0,254,0],{offset:8})||n([39,0,254,0],{offset:8})))return{ext:"dng",mime:"image/x-adobe-dng"};if(n([73,73,42,0])&&n([28,0,254,0],{offset:8}))return{ext:"nef",mime:"image/x-nikon-nef"};if(n([73,73,85,0,24,0,0,0,136,231,116,216]))return{ext:"rw2",mime:"image/x-panasonic-rw2"};if(r("FUJIFILMCCD-RAW"))return{ext:"raf",mime:"image/x-fujifilm-raf"};if(n([73,73,42,0])||n([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(n([66,77]))return{ext:"bmp",mime:"image/bmp"};if(n([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(n([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};const i=[80,75,3,4];if(n(i)){if(n([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(n(xpiZipFilename,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(r("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(r("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(r("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};let t,o=0,a=!1;do{const s=o+30;if(a||(a=n(oxmlContentTypes,{offset:s})||n(oxmlRels,{offset:s})),t||(r("word/",{offset:s})?t={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:r("ppt/",{offset:s})?t={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:r("xl/",{offset:s})&&(t={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),a&&t)return t;o=multiByteIndexOf(e,i,s)}while(o>=0);if(t)return t}if(n([80,75])&&(3===e[2]||5===e[2]||7===e[2])&&(4===e[3]||6===e[3]||8===e[3]))return{ext:"zip",mime:"application/zip"};if(n([48,48,48,48,48,48],{offset:148,mask:[248,248,248,248,248,248]})&&tarHeaderChecksumMatches(e))return{ext:"tar",mime:"application/x-tar"};if(n([82,97,114,33,26,7])&&(0===e[6]||1===e[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(n([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(n([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(n([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(n([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(n([102,114,101,101],{offset:4})||n([109,100,97,116],{offset:4})||n([109,111,111,118],{offset:4})||n([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(n([102,116,121,112],{offset:4})&&0!=(96&e[8])&&0!=(96&e[9])&&0!=(96&e[10])&&0!=(96&e[11])){const t=uint8ArrayUtf8ByteString(e,8,12);switch(t){case"mif1":return{ext:"heic",mime:"image/heif"};case"msf1":return{ext:"heic",mime:"image/heif-sequence"};case"heic":case"heix":return{ext:"heic",mime:"image/heic"};case"hevc":case"hevx":return{ext:"heic",mime:"image/heic-sequence"};case"qt  ":return{ext:"mov",mime:"video/quicktime"};case"M4V ":case"M4VH":case"M4VP":return{ext:"m4v",mime:"video/x-m4v"};case"M4P ":return{ext:"m4p",mime:"video/mp4"};case"M4B ":return{ext:"m4b",mime:"audio/mp4"};case"M4A ":return{ext:"m4a",mime:"audio/x-m4a"};case"F4V ":return{ext:"f4v",mime:"video/mp4"};case"F4P ":return{ext:"f4p",mime:"video/mp4"};case"F4A ":return{ext:"f4a",mime:"audio/mp4"};case"F4B ":return{ext:"f4b",mime:"audio/mp4"};default:return t.startsWith("3g")?t.startsWith("3g2")?{ext:"3g2",mime:"video/3gpp2"}:{ext:"3gp",mime:"video/3gpp"}:{ext:"mp4",mime:"video/mp4"}}}if(n([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(n([26,69,223,163])){const t=e.subarray(4,4100),n=t.findIndex((t,e,n)=>66===n[e]&&130===n[e+1]);if(-1!==n){const e=n+3,r=n=>[...n].every((n,r)=>t[e+r]===n.charCodeAt(0));if(r("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(r("webm"))return{ext:"webm",mime:"video/webm"}}}if(n([82,73,70,70])){if(n([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(n([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(n([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(n([48,38,178,117,142,102,207,17,166,217])){let t=30;do{const r=readUInt64LE(e,t+16);if(n([145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101],{offset:t})){if(n([64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43],{offset:t+24}))return{ext:"wma",mime:"audio/x-ms-wma"};if(n([192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43],{offset:t+24}))return{ext:"wmv",mime:"video/x-ms-asf"};break}t+=r}while(t+24<=e.length);return{ext:"asf",mime:"application/vnd.ms-asf"}}if(n([0,0,1,186])||n([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};for(let t=0;t<2&&t<e.length-16;t++){if(n([73,68,51],{offset:t})||n([255,226],{offset:t,mask:[255,230]}))return{ext:"mp3",mime:"audio/mpeg"};if(n([255,228],{offset:t,mask:[255,230]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,248],{offset:t,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,240],{offset:t,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(n([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(n([79,103,103,83]))return n([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:n([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:n([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:n([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:n([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(n([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(n([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(n([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(n([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(n([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(n([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((67===e[0]||70===e[0])&&n([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(n([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(n([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(n([119,79,70,70])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(n([119,79,70,50])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(n([76,80],{offset:34})&&(n([0,0,1],{offset:8})||n([1,0,2],{offset:8})||n([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(n([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(n([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(n([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(n([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(n([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(n([37,33]))return{ext:"ps",mime:"application/postscript"};if(n([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(n([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(n([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(n([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(n([77,83,67,70])||n([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(n([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(n([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(n([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(n([31,160])||n([31,157]))return{ext:"Z",mime:"application/x-compress"};if(n([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(n([208,207,17,224,161,177,26,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62]))return{ext:"msi",mime:"application/x-msi"};if(n([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(n([71],{offset:4})&&(n([71],{offset:192})||n([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(n([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(n([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(n([0,0,0,12,106,80,32,32,13,10,135,10])){if(n([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(n([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(n([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(n([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}return n([70,79,82,77])?{ext:"aif",mime:"audio/aiff"}:r("<?xml ")?{ext:"xml",mime:"application/xml"}:n([66,79,79,75,77,79,66,73],{offset:60})?{ext:"mobi",mime:"application/x-mobipocket-ebook"}:n([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:n([68,73,67,77],{offset:128})?{ext:"dcm",mime:"application/dicom"}:n([77,80,43])||n([77,80,67,75])?{ext:"mpc",mime:"audio/x-musepack"}:n([66,69,71,73,78,58])?{ext:"ics",mime:"text/calendar"}:n([103,108,84,70,2,0,0,0])?{ext:"glb",mime:"model/gltf-binary"}:n([212,195,178,161])||n([161,178,195,212])?{ext:"pcap",mime:"application/vnd.tcpdump.pcap"}:n([68,83,68,32])?{ext:"dsf",mime:"audio/x-dsf"}:n([76,0,0,0,1,20,2,0,0,0,0,0,192,0,0,0,0,0,0,70])?{ext:"lnk",mime:"application/x.ms.shortcut"}:n([98,111,111,107,0,0,0,0,109,97,114,107,0,0,0,0])?{ext:"alias",mime:"application/x.apple.alias"}:r("Creative Voice File")?{ext:"voc",mime:"audio/x-voc"}:n([11,119])?{ext:"ac3",mime:"audio/vnd.dolby.dd-raw"}:(n([126,16,4])||n([126,24,4]))&&n([48,77,73,69],{offset:4})?{ext:"mie",mime:"application/x-mie"}:void 0};module.exports=fileType,Object.defineProperty(fileType,"minimumBytes",{value:4100}),fileType.stream=readableStream=>new Promise((resolve,reject)=>{const stream=eval("require")("stream");readableStream.on("error",reject),readableStream.once("readable",()=>{const t=new stream.PassThrough,e=readableStream.read(module.exports.minimumBytes)||readableStream.read();try{t.fileType=fileType(e)}catch(t){reject(t)}readableStream.unshift(e),stream.pipeline?resolve(stream.pipeline(readableStream,t,()=>{})):resolve(readableStream.pipe(t))})}),Object.defineProperty(fileType,"extensions",{get:()=>new Set(supported.extensions)}),Object.defineProperty(fileType,"mimeTypes",{get:()=>new Set(supported.mimeTypes)})}).call(this,{isBuffer:require("../is-buffer/index.js")})},{"../is-buffer/index.js":76,"./supported":73,"./util":74}],73:[function(t,e,n){"use strict";e.exports={extensions:["jpg","png","apng","gif","webp","flif","cr2","orf","arw","dng","nef","rw2","raf","tif","bmp","jxr","psd","zip","tar","rar","gz","bz2","7z","dmg","mp4","mid","mkv","webm","mov","avi","mpg","mp2","mp3","m4a","oga","ogg","ogv","opus","flac","wav","spx","amr","pdf","epub","exe","swf","rtf","wasm","woff","woff2","eot","ttf","otf","ico","flv","ps","xz","sqlite","nes","crx","xpi","cab","deb","ar","rpm","Z","lz","msi","mxf","mts","blend","bpg","docx","pptx","xlsx","3gp","3g2","jp2","jpm","jpx","mj2","aif","qcp","odt","ods","odp","xml","mobi","heic","cur","ktx","ape","wv","wmv","wma","dcm","ics","glb","pcap","dsf","lnk","alias","voc","ac3","m4v","m4p","m4b","f4v","f4p","f4b","f4a","mie","asf","ogm","ogx","mpc"],mimeTypes:["image/jpeg","image/png","image/gif","image/webp","image/flif","image/x-canon-cr2","image/tiff","image/bmp","image/vnd.ms-photo","image/vnd.adobe.photoshop","application/epub+zip","application/x-xpinstall","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/zip","application/x-tar","application/x-rar-compressed","application/gzip","application/x-bzip2","application/x-7z-compressed","application/x-apple-diskimage","video/mp4","audio/midi","video/x-matroska","video/webm","video/quicktime","video/vnd.avi","audio/vnd.wave","audio/qcelp","audio/x-ms-wma","video/x-ms-asf","application/vnd.ms-asf","video/mpeg","video/3gpp","audio/mpeg","audio/mp4","audio/opus","video/ogg","audio/ogg","application/ogg","audio/x-flac","audio/ape","audio/wavpack","audio/amr","application/pdf","application/x-msdownload","application/x-shockwave-flash","application/rtf","application/wasm","font/woff","font/woff2","application/vnd.ms-fontobject","font/ttf","font/otf","image/x-icon","video/x-flv","application/postscript","application/x-xz","application/x-sqlite3","application/x-nintendo-nes-rom","application/x-google-chrome-extension","application/vnd.ms-cab-compressed","application/x-deb","application/x-unix-archive","application/x-rpm","application/x-compress","application/x-lzip","application/x-msi","application/x-mie","application/mxf","video/mp2t","application/x-blender","image/bpg","image/jp2","image/jpx","image/jpm","image/mj2","audio/aiff","application/xml","application/x-mobipocket-ebook","image/heif","image/heif-sequence","image/heic","image/heic-sequence","image/ktx","application/dicom","audio/x-musepack","text/calendar","model/gltf-binary","application/vnd.tcpdump.pcap","audio/x-dsf","application/x.ms.shortcut","application/x.apple.alias","audio/x-voc","audio/vnd.dolby.dd-raw","audio/x-m4a","image/apng","image/x-olympus-orf","image/x-sony-arw","image/x-adobe-dng","image/x-nikon-nef","image/x-panasonic-rw2","image/x-fujifilm-raf","video/x-m4v","video/3gpp2"]}},{}],74:[function(t,e,n){(function(t){"use strict";n.stringToBytes=t=>[...t].map(t=>t.charCodeAt(0));const e=(t,e,n)=>String.fromCharCode(...t.slice(e,n));n.readUInt64LE=(t,e=0)=>{let n=t[e],r=1,i=0;for(;++i<8;)r*=256,n+=t[e+i]*r;return n},n.tarHeaderChecksumMatches=t=>{if(t.length<512)return!1;let n=256,r=0;for(let e=0;e<148;e++){const i=t[e];n+=i,r+=128&i}for(let e=156;e<512;e++){const i=t[e];n+=i,r+=128&i}const i=parseInt(e(t,148,154),8);return i===n||i===n-(r<<1)},n.multiByteIndexOf=(e,n,r=0)=>{if(t&&t.isBuffer(e))return e.indexOf(t.from(n),r);const i=(t,e,n)=>{for(let r=1;r<e.length;r++)if(e[r]!==t[n+r])return!1;return!0};let o=e.indexOf(n[0],r);for(;o>=0;){if(i(e,n,o))return o;o=e.indexOf(n[0],o+1)}return-1},n.uint8ArrayUtf8ByteString=e}).call(this,t("buffer").Buffer)},{buffer:70}],75:[function(t,e,n){n.read=function(t,e,n,r,i){var o,a,s=8*i-r-1,u=(1<<s)-1,c=u>>1,f=-7,l=n?i-1:0,p=n?-1:1,d=t[e+l];for(l+=p,o=d&(1<<-f)-1,d>>=-f,f+=s;f>0;o=256*o+t[e+l],l+=p,f-=8);for(a=o&(1<<-f)-1,o>>=-f,f+=r;f>0;a=256*a+t[e+l],l+=p,f-=8);if(0===o)o=1-c;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,r),o-=c}return(d?-1:1)*a*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var a,s,u,c=8*o-i-1,f=(1<<c)-1,l=f>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:o-1,h=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,a=f):(a=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-a))<1&&(a--,u*=2),(e+=a+l>=1?p/u:p*Math.pow(2,1-l))*u>=2&&(a++,u/=2),a+l>=f?(s=0,a=f):a+l>=1?(s=(e*u-1)*Math.pow(2,i),a+=l):(s=e*Math.pow(2,l-1)*Math.pow(2,i),a=0));i>=8;t[n+d]=255&s,d+=h,s/=256,i-=8);for(a=a<<i|s,c+=i;c>0;t[n+d]=255&a,d+=h,a/=256,c-=8);t[n+d-h]|=128*m}},{}],76:[function(t,e,n){function r(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}e.exports=function(t){return null!=t&&(r(t)||function(t){return"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&r(t.slice(0,0))}(t)||!!t._isBuffer)}},{}],77:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.array=function(t,e){for(var n=[],r=0;r<t;r++)n.push(void 0===e?r:e);return n},n.asArray=function(t){return Array.isArray(t)?t:[t]},n.seq=function(t,e,n){void 0===t&&(t=0),void 0===e&&(e=1),void 0===n&&(n=0);for(var r=[],i=t;i<n;i+=e)r.push(i);return r}},{}],78:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.enumKeys=function(t){var e=[];for(var n in t)e.push(n);return e},n.enumNoValueKeys=function(t){return Object.keys(t).map((function(e){return t[e]})).filter((function(t,e,n){return"string"==typeof t&&n.indexOf(t)===e}))}},{}],79:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.dedup=function(t,e){return t.filter((function(t,n,r){return n===r.findIndex((function(n){return e(t,n)}))}))},n.notSame=function(t,e,n){return n.indexOf(t)===e},n.notSameNotFalsy=function(t,e,n){return n.indexOf(t)===e}},{}],80:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.flatDeep=function t(e){return e.reduce((function(e,n){return Array.isArray(n)?e.concat(t(n)):e.concat(n)}),[])},n.flat=function(t){return t.reduce((function(t,e){return t.concat(e)}))},n.flatReadOnly=function(t){return t&&t.length?t.reduce((function(t,e){return t.concat(e)})):[]}},{}],81:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./create")),r(t("./enumKeys")),r(t("./filter")),r(t("./flat")),r(t("./prototypeFind")),r(t("./set"))},{"./create":77,"./enumKeys":78,"./filter":79,"./flat":80,"./prototypeFind":82,"./set":83}],82:[function(t,e,n){"use strict";function r(t,e,n){for(var r=0;r<t.length;r++){var i=t[r];if(e.apply(n,[i,r,t]))return i}}Object.defineProperty(n,"__esModule",{value:!0}),n.arrayPrototypeFind=r,n.installArrayPrototypeFind=function(t){void 0===t&&(t=!1),Array.prototype.find=void 0===Array.prototype.find||t?function(t,e){return r(this,t,e)}:Array.prototype.find}},{}],83:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./filter");function i(t,e,n,i){void 0===n&&(n=function(t,e){return t===e});var o=r.dedup(t.concat(e),n);return i&&i.push.apply(i,r.dedup(o.concat(i),n)),o}n.unionEquals=i,n.arrayUnion=i,n.arrayInterception=function(t,e,n,i){void 0===n&&(n=function(t,e){return t===e});var o=t.filter((function(t){return e.find((function(e){return n(t,e)}))}));return o=r.dedup(o,n),i&&i.push.apply(i,r.dedup(o.concat(i),n)),o},n.arrayDifference=function(t,e,n,i){void 0===n&&(n=function(t,e){return t===e});var o=t.filter((function(t){return!e.find((function(e){return n(t,e)}))})).concat(e.filter((function(e){return!t.find((function(t){return n(e,t)}))})));return o=r.dedup(o,n),i&&i.push.apply(i,r.dedup(o.concat(i),n)),o}},{"./filter":79}],84:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.rgb2Hex=function(t){return t.match(/[0-9]+/g).reduce((function(t,e){return t+(256|e).toString(16).slice(1)}),"#").toString(16)}},{}],85:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./array");function i(t,e,n){return t===e?!n.negate||o(!0):(t=a(t,n),e=a(e,n),n.verb&&"contains"!==n.verb?"equals"===n.verb?n.negate?o(t===e):t===e:"contained"===n.verb?n.negate?o(e.includes(t)):e.includes(t):"endsWith"===n.verb?n.negate?o(t.endsWith(e)):t.endsWith(e):"startsWith"===n.verb?n.negate?o(t.startsWith(e)):t.startsWith(e):!!n.negate&&o(!1):n.negate?o(t.includes(e)):t.includes(e))}function o(t){return!t}function a(t,e){return e.caseInsensitive&&(t=t.toLowerCase()),e.asCode&&(t=t.replace(/\s+/g," ").trim()),t}n.compareTexts=function(t,e,n){return function(t,e,n,i){var a=r.asArray(t),s=r.asArray(e);if(a===s)return!n.negate||o(!0);if(n.multiplicity&&"anyOf"!==n.multiplicity)return"allOf"===n.multiplicity?(u=!a.find((function(t){return!s.find((function(e){return i(t,e,n)}))})),n.negate?o(u):u):!!n.negate&&o(!1);var u=!!a.find((function(t){return!!s.find((function(e){return i(t,e,n)}))}));return n.negate?o(u):u}(t,e,n,i)},n.compareText=i},{"./array":81}],86:[function(t,e,n){(function(r,i){"use strict";function o(){return void 0!==r&&void 0!==i&&"function"==typeof r.exit&&void 0!==e&&"function"==typeof t&&void 0!==t("fs")&&"function"==typeof t("fs").writeFileSync&&void 0!==t("child_process")&&"function"==typeof t("child_process").execSync}function a(){return"undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof Node&&document.nodeType===Node.DOCUMENT_NODE}function s(){return!n.isDOM()&&!o()&&"undefined"!=typeof self&&void 0!==self.onmessage}Object.defineProperty(n,"__esModule",{value:!0}),n.isNode=o,n.isJSDOM=function(){return o()&&n.isDOM()},n.inNode=o,n.inBrowser=a,n.isBrowser=a,n.inDOM=a,n.isDOM=a,n.isWebWorker=s;var u=this;n.getGlobal=function(){return s()?self:o()?i:n.isBrowser()?window:u}}).call(this,t("_process"),void 0!==global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:121}],87:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(){this.l=[]}return t.prototype.add=function(t){this.l.push(t)},t.prototype.emit=function(t){this.l.forEach((function(e){return e(t)}))},t.prototype.remove=function(t){this.l=this.l.filter((function(e){return e===t}))},t}();n.Emitter=r},{}],88:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.checkThrow=function(t,e){if(void 0===e&&(e="Throwing on undefined value"),!t)throw new Error(e);return t},n.checkTruthy=function(t,e){if(void 0===e&&(e="Throwing on undefined value"),!t)throw new Error(e);return!0},n.tryTo=function(t,e){try{return t()}catch(t){return e}}},{}],89:[function(t,e,n){"use strict";function r(t){var e=s(t).lastIndexOf(".");return-1===e?t:t.substring(0,e)}function i(t){var e=s(t).lastIndexOf("/");return-1===e?"":t.substring(0,e)}function o(t,e){t=s(t);var n=(e=s(e)).split("/"),r=t.split("/"),i=n.pop(),o=n.join("/");if(n.length<2&&r.length<2)return e;for(var a="";-1===o.indexOf(r.join("/"));)r.pop(),a+="../";var u=n.slice(r.length);return u.length&&(a+=u.join("/")+"/"),a+i}function a(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n="/",r=new RegExp(n+"{1,}","g");return t.filter(Boolean).map(s).join(n).replace(r,n)}function s(t){var e=/^\\\\\?\\/.test(t),n=/[^\u0000-\u0080]+/.test(t);return e||n?t:t.replace(/\\/g,"/")}Object.defineProperty(n,"__esModule",{value:!0}),n.bytesToKiloBytes=function(t){return t/1e3},n.withoutExtension=r,n.basename=function(t,e){void 0===e&&(e=!1);var n=s(t).lastIndexOf("/"),i=-1===n?t:t.substring(n+1,t.length);return e?r(i):i},n.getFileExtension=function(t){var e=t.lastIndexOf(".");return-1==e||e===t.length-1?"":t.substring(e+1,t.length)},n.dirname=i,n.getRelativePath=o,n.pathJoin=a,n.parseGitIgnore=function(t,e){void 0===e&&(e={cwd:".",fileName:".gitignore"});var n=o(e.cwd,i(e.fileName));return t.split(/\r?\n/).filter(Boolean).filter((function(t){return"#"!==t.charAt(0)})).map(function(t){return function(e){return e.startsWith("!")?"!"+a(t,e.slice(1)):a(t,e)}}(n))},n.slash=s,n.detectNewline=function(t,e){void 0===e&&(e="\n");var n=t.match(/(?:\r?\n)/g)||[];if(0===n.length)return e;var r=n.filter((function(t){return"\r\n"===t})).length;return r>n.length-r?"\r\n":"\n"}},{}],90:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.isGenerator=function(t){return t&&"function"==typeof t.next&&"function"==typeof t.throw},n.isGeneratorFunction=function(t){return"function"==typeof t&&t.constructor&&"GeneratorFunction"===t.constructor.name},n.isClassConstructorFunction=function(t){return t&&t.prototype&&t.prototype.constructor&&t.prototype.constructor.toString().startsWith("class")}},{}],91:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e){this.x=t,this.y=e,this.set(t,e)}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.set=function(t,e){return this.x=t,this.y=e,this},t.prototype.equals=function(t,e){return this.x==t&&this.y==e},t.prototype.toString=function(){return"("+this.x+","+this.y+")"},t.prototype.map=function(t){return this.x=t(this.x),this.y=t(this.y),this},t.prototype.add=function(t,e){return this.x+=t,this.y+=e,this},t.prototype.subtract=function(t,e){return this.x-=t,this.y-=e,this},t.prototype.scale=function(t){return this.x*=t,this.y*=t,this},t.prototype.isZero=function(){return 0===this.x&&0==this.y},t}();n.Point=r;var i=function(){function t(t,e,n,r){this.left=t,this.top=e,this.right=n,this.bottom=r}return Object.defineProperty(t.prototype,"x",{get:function(){return this.left},set:function(t){var e=this.left-t;this.left=t,this.right-=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this.top},set:function(t){var e=this.top-t;this.top=t,this.bottom-=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.right-this.left},set:function(t){this.right=this.left+t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.bottom-this.top},set:function(t){this.bottom=this.top+t},enumerable:!0,configurable:!0}),t.prototype.isEmpty=function(){return this.left>=this.right||this.top>=this.bottom},t.prototype.setRect=function(t,e,n,r){return this.left=t,this.top=e,this.right=t+n,this.bottom=e+r,this},t.prototype.setBounds=function(t,e,n,r){return this.top=e,this.left=t,this.bottom=r,this.right=n,this},t.prototype.equals=function(t){return t&&(this.isEmpty()&&t.isEmpty()||this.top==t.top&&this.left==t.left&&this.bottom==t.bottom&&this.right==t.right)},t.prototype.clone=function(){return new t(this.left,this.top,this.right-this.left,this.bottom-this.top)},t.prototype.center=function(){if(this.isEmpty())throw new Error("Empty rectangles do not have centers");return new r(this.left+(this.right-this.left)/2,this.top+(this.bottom-this.top)/2)},t.prototype.copyFrom=function(t){return this.top=t.top,this.left=t.left,this.bottom=t.bottom,this.right=t.right,this},t.prototype.translate=function(t,e){return this.left+=t,this.right+=t,this.top+=e,this.bottom+=e,this},t.prototype.toString=function(){return"["+this.x+","+this.y+","+this.width+","+this.height+"]"},t.prototype.union=function(t){return this.clone().expandToContain(t)},t.prototype.contains=function(t){return!!t.isEmpty()||!this.isEmpty()&&t.left>=this.left&&t.right<=this.right&&t.top>=this.top&&t.bottom<=this.bottom},t.prototype.intersect=function(t){return this.clone().restrictTo(t)},t.prototype.intersects=function(t){if(this.isEmpty()||t.isEmpty())return!1;var e=Math.max(this.left,t.left),n=Math.min(this.right,t.right),r=Math.max(this.top,t.top),i=Math.min(this.bottom,t.bottom);return e<n&&r<i},t.prototype.restrictTo=function(t){if(this.isEmpty()||t.isEmpty())return this.setRect(0,0,0,0);var e=Math.max(this.left,t.left),n=Math.min(this.right,t.right),r=Math.max(this.top,t.top),i=Math.min(this.bottom,t.bottom);return this.setRect(e,r,Math.max(0,n-e),Math.max(0,i-r))},t.prototype.expandToContain=function(t){if(this.isEmpty())return this.copyFrom(t);if(t.isEmpty())return this;var e=Math.min(this.left,t.left),n=Math.max(this.right,t.right),r=Math.min(this.top,t.top),i=Math.max(this.bottom,t.bottom);return this.setRect(e,r,n-e,i-r)},t.prototype.round=function(){return this.left=Math.floor(this.left),this.top=Math.floor(this.top),this.right=Math.ceil(this.right),this.bottom=Math.ceil(this.bottom),this},t.prototype.scale=function(t,e){return this.left*=t,this.right*=t,this.top*=e,this.bottom*=e,this},t.prototype.map=function(t){return this.left=t(this.left),this.top=t(this.top),this.right=t(this.right),this.bottom=t(this.bottom),this},t.prototype.translateInside=function(t){var e=0;this.left<=t.left?e=t.left-this.left:this.right>t.right&&(e=t.right-this.right);var n=0;return this.top<=t.top?n=t.top-this.top:this.bottom>t.bottom&&(n=t.bottom-this.bottom),this.translate(e,n)},t.prototype.subtract=function(e){var n=new t(0,0,0,0),r=[];return(e=e.intersect(this)).isEmpty()?[this.clone()]:(n.setBounds(this.left,this.top,e.left,this.bottom),n.isEmpty()||r.push(n.clone()),n.setBounds(e.left,this.top,e.right,e.top),n.isEmpty()||r.push(n.clone()),n.setBounds(e.left,e.bottom,e.right,this.bottom),n.isEmpty()||r.push(n.clone()),n.setBounds(e.right,this.top,this.right,this.bottom),n.isEmpty()||r.push(n.clone()),r)},t.prototype.blend=function(e,n){return new t(this.left+(e.left-this.left)*n,this.top+(e.top-this.top)*n,this.width+(e.width-this.width)*n,this.height+(e.height-this.height)*n)},t.prototype.inflate=function(t,e){var n=(this.width*t-this.width)/2,r=arguments.length>1?e:t,i=(this.height*r-this.height)/2;return this.left-=n,this.right+=n,this.top-=i,this.bottom+=i,this},t.prototype.inflateFixed=function(t){return this.left-=t,this.right+=t,this.top-=t,this.bottom+=t,this},t}();n.Rect=i},{}],92:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./array")),r(t("./color")),r(t("./compareText")),r(t("./environment")),r(t("./event")),r(t("./exceptions")),r(t("./file")),r(t("./function")),r(t("./geometry")),r(t("./json")),r(t("./merge")),r(t("./mime")),r(t("./number")),r(t("./object")),r(t("./promise")),r(t("./string")),r(t("./time")),r(t("./tree")),r(t("./type")),r(t("./url"))},{"./array":81,"./color":84,"./compareText":85,"./environment":86,"./event":87,"./exceptions":88,"./file":89,"./function":90,"./geometry":91,"./json":93,"./merge":94,"./mime":95,"./number":96,"./object":97,"./promise":98,"./string":106,"./time":111,"./tree":116,"./type":117,"./url":118}],93:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./object"),i=t("./type");function o(t,e,n){return i.isArray(t)&&t?e(t,n)||t.some((function(t,n){return o(t,e,n)})):"object"==typeof t&&t?e(t,n)||r.objectToArray(t).some((function(t){return o(t.value,e,t.key)})):e(t,n)}n.parseJSON=function(t,e){void 0===e&&(e=void 0);try{return JSON.parse(t)}catch(t){return e}},n.stringifyJSON=function(t,e){void 0===e&&(e=void 0);try{return JSON.stringify(t)}catch(t){return e}},n.cloneJSON=function(t){return JSON.parse(JSON.stringify(t))},n.visitJson=o,n.findJson=function(t,e,n){var r=void 0;return o(t,(function(t,n){return!!e(t,n)&&(r={value:t,key:n},!0)})),r},n.isJSONObject=function(t){return"object"==typeof t&&!Array.isArray(t)}},{"./object":97,"./type":117}],94:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./type");function i(t){var e,n,o=t,a=r.typeOf(t);if("array"===a)for(o=[],n=t.length,e=0;e<n;++e)o[e]=i(t[e]);else if("object"===a)for(e in o={},t)o[e]=i(t[e]);return o}function o(t,e){if("object"!==r.typeOf(t))return e;for(var n in e)"object"===r.typeOf(t[n])&&"object"===r.typeOf(e[n])?t[n]=o(t[n],e[n]):t[n]=e[n];return t}function a(t,e){for(var n=[],a=2;a<arguments.length;a++)n[a-2]=arguments[a];var s=n[0],u=n.length;(t||"object"!==r.typeOf(s))&&(s={});for(var c=0;c<u;++c){var f=n[c],l=r.typeOf(f);if("object"===l)for(var p in f)if("__proto__"!==p){var d=t?i(f[p]):f[p];s[p]=e?o(s[p],d):d}}return s}n.recursive=function(t){return a(!0===t,!0,arguments)},n.clone=i,n.mergeRecursive=o,n.merge=a},{"./type":117}],95:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getMimeTypeForExtension=function(t){return Object.keys(r).find((function(e){return r[e].extensions.includes(t)}))},n.getExtensionsForMimeType=function(t){var e=Object.keys(r).find((function(e){return e===t}));return e&&r[e].extensions};var r={"application/atom+xml":{extensions:["atom"]},"application/java-archive":{extensions:["jar","war","ear"]},"application/javascript":{extensions:["js"]},"application/json":{extensions:["json"]},"application/mac-binhex40":{extensions:["hqx"]},"application/msword":{extensions:["doc"]},"application/octet-stream":{extensions:["bin","exe","dll","deb","dmg","iso","img","msi","msp","msm"]},"application/pdf":{extensions:["pdf"]},"application/postscript":{extensions:["ps","eps","ai"]},"application/rss+xml":{extensions:["rss"]},"application/rtf":{extensions:["rtf"]},"application/vnd.apple.mpegurl":{extensions:["m3u8"]},"application/vnd.google-earth.kml+xml":{extensions:["kml"]},"application/vnd.google-earth.kmz":{extensions:["kmz"]},"application/vnd.ms-excel":{extensions:["xls"]},"application/vnd.ms-fontobject":{extensions:["eot"]},"application/vnd.ms-powerpoint":{extensions:["ppt"]},"application/vnd.oasis.opendocument.graphics":{extensions:["odg"]},"application/vnd.oasis.opendocument.presentation":{extensions:["odp"]},"application/vnd.oasis.opendocument.spreadsheet":{extensions:["ods"]},"application/vnd.oasis.opendocument.text":{extensions:["odt"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{extensions:["docx"]},"application/vnd.wap.wmlc":{extensions:["wmlc"]},"application/x-7z-compressed":{extensions:["7z"]},"application/x-cocoa":{extensions:["cco"]},"application/x-java-archive-diff":{extensions:["jardiff"]},"application/x-java-jnlp-file":{extensions:["jnlp"]},"application/x-makeself":{extensions:["run"]},"application/x-perl":{extensions:["pl","pm"]},"application/x-pilot":{extensions:["prc","pdb"]},"application/x-rar-compressed":{extensions:["rar"]},"application/x-redhat-package-manager":{extensions:["rpm"]},"application/x-sea":{extensions:["sea"]},"application/x-shockwave-flash":{extensions:["swf"]},"application/x-stuffit":{extensions:["sit"]},"application/x-tcl":{extensions:["tcl","tk"]},"application/x-x509-ca-cert":{extensions:["der","pem","crt"]},"application/x-xpinstall":{extensions:["xpi"]},"application/xhtml+xml":{extensions:["xhtml"]},"application/xspf+xml":{extensions:["xspf"]},"application/zip":{extensions:["zip"]},"audio/midi":{extensions:["mid","midi","kar"]},"audio/mpeg":{extensions:["mp3"]},"audio/ogg":{extensions:["ogg"]},"audio/x-m4a":{extensions:["m4a"]},"audio/x-realaudio":{extensions:["ra"]},"font/woff":{extensions:["woff"]},"font/woff2":{extensions:["woff2"]},"image/gif":{extensions:["gif"]},"image/jpeg":{extensions:["jpeg","jpg"]},"image/png":{extensions:["png"]},"image/svg+xml":{extensions:["svg","svgz"]},"image/tiff":{extensions:["tif","tiff"]},"image/vnd.wap.wbmp":{extensions:["wbmp"]},"image/webp":{extensions:["webp"]},"image/x-icon":{extensions:["ico"]},"image/x-jng":{extensions:["jng"]},"image/x-ms-bmp":{extensions:["bmp"]},"text/css":{extensions:["css"]},"text/html":{extensions:["html","htm","shtml"]},"text/mathml":{extensions:["mml"]},"text/plain":{extensions:["txt"]},"text/vnd.sun.j2me.app-descriptor":{extensions:["jad"]},"text/vnd.wap.wml":{extensions:["wml"]},"text/x-component":{extensions:["htc"]},"text/xml":{extensions:["xml"]},"video/3gpp":{extensions:["3gpp","3gp"]},"video/mp2t":{extensions:["ts"]},"video/mp4":{extensions:["mp4"]},"video/mpeg":{extensions:["mpeg","mpg"]},"video/quicktime":{extensions:["mov"]},"video/webm":{extensions:["webm"]},"video/x-flv":{extensions:["flv"]},"video/x-m4v":{extensions:["m4v"]},"video/x-mng":{extensions:["mng"]},"video/x-ms-asf":{extensions:["asx","asf"]},"video/x-ms-wmv":{extensions:["wmv"]},"video/x-msvideo":{extensions:["avi"]}}},{}],96:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./array"),i=0;function o(t,e){return Math.floor(Math.random()*e)+t}function a(t,e,n){return r.array(t).map((function(t){return s(e,n)}))}function s(t,e){return Math.random()*e+t}function u(t,e,n){return r.array(t).map((function(t){return s(e,n)}))}n.unique=function(t){return void 0===t&&(t="_"),t+i++},n.randomIntBetween=o,n.randomIntsBetween=a,n.ints=a,n.int=o,n.randomFloatBetween=s,n.randomFloatsBetween=u,n.floats=u,n.float=s,n.between=function(t,e,n){return Math.max(e,Math.min(t,n))},n.intBetween=function(t,e,n){return Math.trunc(Math.max(e,Math.min(t,n)))}},{"./array":81}],97:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("./type");function i(t){return Object.keys(t)}function o(t,e){var n={};return i(t).forEach((function(r){n[r]=e(r,t[r])})),n}n.objectKeys=i,n.objectMapValues=o,n.objectMap=o,n.objectToArray=function(t){return i(t).map((function(e){return{key:e,value:t[e]}}))},n.objectFilter=function(t,e){var n={};return i(t).filter((function(n,r){return e(n,t[n])})).forEach((function(e){n[e]=t[e]})),n},n.arrayToObject=function(t,e){var n={};return t.filter(r.notUndefined).forEach((function(t){n[t]=e(t)})),n},n.getObjectProperty=function(t,e,n){if(void 0===n&&(n=void 0),!e)return t;if(t){for(var r="string"==typeof e?e.split("."):e,i=t,o=0;void 0!==i&&o<r.length;)i=i[r[o++]];if(void 0!==i)return i}return n},n.setObjectProperty=function(t,e,n){if(!e||!t)throw new Error("Insufficient arguments");var r="string"==typeof e?e.split("."):e,i=t;if(0===r.length)return Object.assign(t,n),t;for(var o=0;o<r.length-1;++o){var a=r[o];if(void 0===i[a])i[a]="number"==typeof r[o+1]?[]:{};else if("number"==typeof r[o+1]&&!Array.isArray(i[a]))throw new Error("Detected number path item on non array value. Path: "+e+", item: "+r[o+1]+", Value: "+i[a]);i=i[a]}return r.length&&(i[r[r.length-1]]=n),t},n.getObjectPropertyPaths=function(t,e){void 0===e&&(e={ignoreArrayElements:!0,leafsOnly:!1});var n=[];!function t(n,i,o){void 0===i&&(i=[]),void 0===o&&(o=[]);var a=r.isArray(n);if(!e.ignoreArrayElements||!a)for(var s in n){var u=n[s],c=a?parseInt(s):s+"",f=o.concat([c]);(r.isObject(u)||r.isArray(u))&&t(u,i,f),i.push(f),i.push(o)}}(t,n,[]);var i=n.filter((function(t,e,n){return n.length&&n.findIndex((function(e){return JSON.stringify(e)===JSON.stringify(t)}))===e})).sort((function(t,e){return t.length-e.length})).filter((function(t){return t.length>0}));return e.leafsOnly?i.filter((function(t){return!i.find((function(e){return e!==t&&e.length>t.length&&JSON.stringify(t)===JSON.stringify(e.slice(0,t.length))}))})):i}},{"./type":117}],98:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.serial=function(t){return new Promise((function(e){t.reduce((function(t,e){return t.then((function(t){return e().then((function(e){return t.concat([e])}))}))}),Promise.resolve([])).then((function(t){e(t)}))}))};var r=function(){function t(t){var e=this;this.resolve=null,this.reject=null,this.status="pending",this.promise=new Promise((function(t,n){e.resolve=function(){this.status="resolved",t.apply(this,arguments)},e.reject=function(){this.status="rejected",n.apply(this,arguments)}})),"function"==typeof t&&t.call(this,this.resolve,this.reject)}return t.prototype.then=function(t){return this.promise.then(t)},t.prototype.catch=function(t){return this.promise.catch(t)},t}();n.Deferred=r},{}],99:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i,o=t("../array");!function(t){t.light="light",t.double="double",t.round="round",t.heavy="heavy",t.lightDouble="lightDouble",t.doubleLight="doubleLight",t.classic="classic",t.lightTripleDash="lightTripleDash",t.lightQuadrupleDash="lightQuadrupleDash",t.lightDoubleDash="lightDoubleDash",t.heavier="heavier",t.roundDoubleDash="roundDoubleDash",t.roundTripleDash="roundTripleDash",t.roundQuadrupleDash="roundQuadrupleDash",t.heavyDoubleDash="heavyDoubleDash",t.heavyTripleDash="heavyTripleDash",t.heavyQuadrupleDash="heavyQuadrupleDash",t.singleRareCorners="singleRareCorners",t.triangleCorners="triangleCorners"}(r=n.BorderStyle||(n.BorderStyle={})),n.borderStyles=o.enumKeys(r),function(t){t.topLeft="topLeft",t.topRight="topRight",t.bottomRight="bottomRight",t.bottomLeft="bottomLeft",t.left="left",t.bottom="bottom",t.top="top",t.right="right"}(n.BorderSide||(n.BorderSide={})),n.getBoxChar=function(t,e){return a()[t][e]};var a=function(){return i||(i={light:{topLeft:"┌",topRight:"┐",bottomRight:"┘",bottomLeft:"└",left:"│",right:"│",bottom:"─",top:"─"},lightTripleDash:{topLeft:"┌",topRight:"┐",bottomRight:"┘",bottomLeft:"└",left:"┆",right:"┆",bottom:"┄",top:"┄"},lightQuadrupleDash:{topLeft:"┌",topRight:"┐",bottomRight:"┘",bottomLeft:"└",left:"┊",right:"┊",bottom:"┈",top:"┈"},lightDoubleDash:{topLeft:"┌",topRight:"┐",bottomRight:"┘",bottomLeft:"└",left:"╎",right:"╎",bottom:"╌",top:"╌"},double:{topLeft:"╔",topRight:"╗",bottomRight:"╝",bottomLeft:"╚",left:"║",right:"║",bottom:"═",top:"═"},round:{topLeft:"╭",topRight:"╮",bottomRight:"╯",bottomLeft:"╰",left:"│",right:"│",bottom:"─",top:"─"},roundDoubleDash:{topLeft:"╭",topRight:"╮",bottomRight:"╯",bottomLeft:"╰",left:"╎",right:"╎",bottom:"╌",top:"╌"},roundTripleDash:{topLeft:"╭",topRight:"╮",bottomRight:"╯",bottomLeft:"╰",left:"┆",right:"┆",bottom:"┄",top:"┄"},roundQuadrupleDash:{topLeft:"╭",topRight:"╮",bottomRight:"╯",bottomLeft:"╰",left:"┊",right:"┊",bottom:"┈",top:"┈"},heavy:{topLeft:"┏",topRight:"┓",bottomRight:"┛",bottomLeft:"┗",left:"┃",right:"┃",bottom:"━",top:"━"},heavyDoubleDash:{topLeft:"┏",topRight:"┓",bottomRight:"┛",bottomLeft:"┗",left:"╏",right:"╏",bottom:"╍",top:"╍"},heavyTripleDash:{topLeft:"┏",topRight:"┓",bottomRight:"┛",bottomLeft:"┗",left:"┇",right:"┇",bottom:"┅",top:"┅"},heavyQuadrupleDash:{topLeft:"┏",topRight:"┓",bottomRight:"┛",bottomLeft:"┗",left:"┋",right:"┋",bottom:"┉",top:"┉"},heavier:{topLeft:"▛",topRight:"▜",bottomRight:"▟",bottomLeft:"▙",left:"▌",right:"▐",bottom:"▄",top:"▀"},lightDouble:{topLeft:"╓",topRight:"╖",bottomRight:"╜",bottomLeft:"╙",left:"║",right:"║",bottom:"─",top:"─"},singleRareCorners:{bottom:"⎽",top:"⎺",left:"⎢",right:"⎥",topLeft:"⎡",topRight:"⎤",bottomRight:"⎦",bottomLeft:"⎣"},triangleCorners:{bottom:"_",top:"⎻",left:"⎸",right:" ⎸",topLeft:"◸",topRight:"◹",bottomRight:"◿",bottomLeft:"◺"},doubleLight:{topLeft:"╒",topRight:"╕",bottomRight:"╛",bottomLeft:"╘",left:"│",right:"│",bottom:"═",top:"═"},classic:{topLeft:"+",topRight:"+",bottomRight:"+",bottomLeft:"+",left:"|",right:"|",bottom:"═",top:"-"}}),i}},{"../array":81}],100:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.changeText=function(t,e){var n=t.split(""),r=0;return e.forEach((function(t){t.toAdd=t.toAdd||"",t.toRemove=t.toRemove||"",n.splice.apply(n,[t.pos+r,t.toRemove.length].concat(t.toAdd.split(""))),r+=t.toAdd.length-t.toRemove.length})),n.join("")}},{}],101:[function(require,module,exports){"use strict";function evaluate(s,defaultValue){void 0===defaultValue&&(defaultValue=void 0);try{return eval("("+s+")")}catch(t){return defaultValue}}function stringToObject(t,e,n){void 0===t&&(t=""),void 0===e&&(e=","),void 0===n&&(n=":");var r=t.split(e).map((function(t){return t.trim()})),i={};return r.forEach((function(t){var e=t.split(n).map((function(t){return t.trim()}));2===e.length&&(i[e[0]]=e[1])})),i}Object.defineProperty(exports,"__esModule",{value:!0}),exports.evaluate=evaluate,exports.stringToObject=stringToObject},{}],102:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("../array");function i(t,e){return r.array(t,e).join("")}n.quote=function(t,e){return void 0===e&&(e='"'),e+t.replace(new RegExp(e,"g"),"\\"+e)+e},n.unquote=function(t){return t.substring(1,t.length-1)},n.repeat=i,n.indent=function(t,e){return void 0===t&&(t=1),void 0===e&&(e=2),i(t*e," ")},n.wordWrap=function(t,e,n){void 0===n&&(n="\n");var r=n.replace(/\\/,"\\\\");return t.replace(new RegExp("(?![^"+r+"]{1,"+e+"}$)([^"+r+"]{1,"+e+"})\\s","g"),"$1"+n)}},{"../array":81}],103:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getPreviousMatchingPos=function(t,e,n){if(e=t.length<=e?t.length:e,"string"==typeof n){var r=n;n=function(t){return t===r}}for(;e>=0&&!n(t[e]);)e--;return e},n.getPosition=function(t,e,n){return t.split(e,n).join(e).length}},{}],104:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.hashCode=function(t){var e=0,n=t.length,r=0;if(n>0)for(;r<n;)e=(e<<5)-e+t.charCodeAt(r++)|0;return e}},{}],105:[function(t,e,n){"use strict";function r(t){for(var e;e=/([A-Z])/.exec(t);)t=t.substring(0,e.index)+"-"+e[1].toLowerCase()+t.substring(e.index+1,t.length);return t}Object.defineProperty(n,"__esModule",{value:!0}),n.escapeHtmlAttribute=function(t){return t.replace(/\"/gim,"&quot;")},n.unEscapeHtmlAttribute=function(t){return t.replace(/\&quot\;/gim,'"')},n.wrapInHtml=function(t){return'\n  <!DOCTYPE html>\n<html>\n<head>\n  <meta charset="utf-8" />\n  <meta http-equiv="X-UA-Compatible" content="IE=edge">\n  <title>title</title>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n</head>\n<body>\n'+t+"\n</body>\n</html>\n"},n.styleObjectToCss=function(t,e){return void 0===e&&(e=""),Object.keys(t).map((function(e){return r(e)+": "+t[e]+";"})).join(e)},n.stylePropertyNameToCssSyntax=r},{}],106:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./boxes")),r(t("./change")),r(t("./evaluate")),r(t("./format")),r(t("./getPreviousMatchingPos")),r(t("./hash")),r(t("./html")),r(t("./template")),r(t("./whiteSpace"))},{"./boxes":99,"./change":100,"./evaluate":101,"./format":102,"./getPreviousMatchingPos":103,"./hash":104,"./html":105,"./template":107,"./whiteSpace":108}],107:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r={};n.template=function t(e,n){var i=/\W/.test(e)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+e.replace(/[\r\t\n]/g," ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):r[e]=r[e]||t(e);return n?i(n):i}},{}],108:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.shorter=function(t,e){return void 0===e&&(e=10),t.trim().substring(0,Math.min(t.length,e))+"..."},n.removeWhites=function(t,e){return void 0===e&&(e=" "),t.replace(/\s+/gm,e).trim()},n.removeEmptyLines=function(t,e){return void 0===e&&(e="\n"),t.split(e).filter((function(t){return!!t.trim()})).join(e)},n.trimRightLines=function(t,e){return void 0===e&&(e="\n"),t.split(e).map((function(t){return t.trimRight()})).join(e)}},{}],109:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("../type");function i(t,e){void 0===e&&(e=0),setTimeout((function(){return t(Date.now())}),e)}n.animate=function(t){var e=t.duration,n=t.draw,o=t.timing,a=t.lapse,s=t.end;return new Promise((function(t){r.isObject(o)&&(o=o.fn(e));var u=Date.now(),c=0;i((function r(f){var l=(f-u)/e;l>1&&(l=1),c=o(l,f-u,e),n(c),l<1?i(r,a):(s&&s(),t())}))}))},function(t){function e(t){for(var e=0,n=1;;e+=n,n/=2)if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(n,2)}t.bounceEasyOut=function(){return t=e,function(e){return 1-t(1-e)};var t},t.quad=function(t){return Math.pow(t,2)},t.back=function(t){return void 0===t&&(t=1.5),function(e){return Math.pow(e,2)*((t+1)*e-t)}},t.elastic=function(t){return void 0===t&&(t=1.5),function(e){return Math.pow(2,10*(e-1))*Math.cos(20*Math.PI*t/3*e)}},t.bounceEaseInOut=function(){return t=e,function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2};var t},t.easeInQuad=function(){return{fn:function(t){return function(e,n){return 1*(n/=t)*n+0}}}},t.easeOutQuad=function(){return{fn:function(t){return function(e,n){return-1*(n/=t)*(n-2)+0}}}},t.easeInOutQuad=function(){return{fn:function(t){return function(e,n){return(n/=t/2)<1?.5*n*n+0:-.5*(--n*(n-2)-1)+0}}}},t.easeInElastic=function(){return{fn:function(t){return function(e,n){var r=1.70158,i=0,o=1;return 0==n?0:1==(n/=t)?1:(i||(i=.3*t),o<Math.abs(1)?o=1:r=i/(2*Math.PI)*Math.asin(1/o),-o*Math.pow(2,10*(n-=1))*Math.sin((n*t-r)*(2*Math.PI)/i)+0)}}}},t.easeOutBounce=function(){return{fn:function(t){return function(e,n){return(n/=t)<1/2.75?7.5625*n*n*1+0:n<2/2.75?1*(7.5625*(n-=1.5/2.75)*n+.75)+0:n<2.5/2.75?1*(7.5625*(n-=2.25/2.75)*n+.9375)+0:1*(7.5625*(n-=2.625/2.75)*n+.984375)+0}}}},t.easeInCubic=function(){return{fn:function(t){return function(e,n){return 1*(n/=t)*n*n+0}}}},t.easeOutCubic=function(){return{fn:function(t){return function(e,n){return 1*((n=n/t-1)*n*n+1)+0}}}},t.easeInOutCubic=function(){return{fn:function(t){return function(e,n){return(n/=t/2)<1?.5*n*n*n+0:.5*((n-=2)*n*n+2)+0}}}},t.easeInQuart=function(){return{fn:function(t){return function(e,n){return 1*(n/=t)*n*n*n+0}}}},t.easeInOutQuart=function(){return{fn:function(t){return function(e,n){return(n/=t/2)<1?.5*n*n*n*n+0:-.5*((n-=2)*n*n*n-2)+0}}}},t.easeInQuint=function(){return{fn:function(t){return function(e,n){return 1*(n/=t)*n*n*n*n+0}}}},t.easeOutQuint=function(){return{fn:function(t){return function(e,n){return 1*((n=n/t-1)*n*n*n*n+1)+0}}}},t.easeInExpo=function(){return{fn:function(t){return function(e,n){return 0==n?0:1*Math.pow(2,10*(n/t-1))+0}}}},t.easeInOutQuint=function(){return{fn:function(t){return function(e,n){return(n/=t/2)<1?.5*n*n*n*n*n+0:.5*((n-=2)*n*n*n*n+2)+0}}}},t.easeInSine=function(){return{fn:function(t){return function(e,n){return-1*Math.cos(n/t*(Math.PI/2))+1+0}}}},t.easeInOutElastic=function(){return{fn:function(t){return function(e,n){var r=1.70158,i=0,o=1;return 0==n?0:2==(n/=t/2)?1:(i||(i=t*(.3*1.5)),o<Math.abs(1)?o=1:r=i/(2*Math.PI)*Math.asin(1/o),n<1?o*Math.pow(2,10*(n-=1))*Math.sin((n*t-r)*(2*Math.PI)/i)*-.5+0:o*Math.pow(2,-10*(n-=1))*Math.sin((n*t-r)*(2*Math.PI)/i)*.5+1+0)}}}},t.easeOutElastic=function(){return{fn:function(t){return function(e,n){var r=1.70158,i=0,o=1;return 0==n?0:1==(n/=t)?1:(i||(i=.3*t),o<Math.abs(1)?o=1:r=i/(2*Math.PI)*Math.asin(1/o),o*Math.pow(2,-10*n)*Math.sin((n*t-r)*(2*Math.PI)/i)+1+0)}}}},t.easeInOutExpo=function(){return{fn:function(t){return function(e,n){return 0==n?0:n==t?1:(n/=t/2)<1?.5*Math.pow(2,10*(n-1))+0:.5*(2-Math.pow(2,-10*--n))+0}}}},t.easeInOutBack=function(){return{fn:function(t){return function(e,n){var r=1.70158;return(n/=t/2)<1?n*n*((1+(r*=1.525))*n-r)*.5+0:.5*((n-=2)*n*((1+(r*=1.525))*n+r)+2)+0}}}},t.easeOutBack=function(){return{fn:function(t){return function(t,e,n){var r=1.70158;return 1*((e=e/n-1)*e*((r+1)*e+r)+1)+0}}}},t.easeInBounce=function(){return{fn:function(e){return function(e,n,r){return 1-t.easeOutBounce().fn(r)(e,r-n,0,1,r)+0}}}},t.easeInOutBounce=function(){return{fn:function(e){return function(e,n,r){return n<r/2?.5*t.easeInBounce().fn(r)(e,2*n,0,1,r)+0:.5*t.easeOutBounce().fn(r)(e,2*n-r,0,1,r)+.5+0}}}}}(n.easing||(n.easing={}))},{"../type":117}],110:[function(t,e,n){"use strict";function r(t,e){"string"==typeof t&&(t=new Date(t));var n=t.getDay(),r=t.getMonth()+1,i=t.getFullYear();return n<10&&(n="0"+n),r<10&&(r="0"+r),"YYYY-MM-DD"===e?i+"-"+r+"-"+n:r+"/"+n+"/"+i}Object.defineProperty(n,"__esModule",{value:!0}),n.formatDate=r,n.formatDateTime=function(t,e){"string"==typeof t&&(t=new Date(t));var n=(""+t.getHours()).length<2?"0"+t.getHours():""+t.getHours(),i=(""+t.getMinutes()).length<2?"0"+t.getMinutes():""+t.getMinutes();return r(t,"YYYY-MM-DD")+"T"+n+":"+i}},{}],111:[function(t,e,n){"use strict";function r(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}Object.defineProperty(n,"__esModule",{value:!0}),r(t("./anim")),r(t("./format")),r(t("./printMs")),r(t("./sleep")),r(t("./throttle")),r(t("./waitFor"))},{"./anim":109,"./format":110,"./printMs":112,"./sleep":113,"./throttle":114,"./waitFor":115}],112:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0}),n.printMs=function(t,e){void 0===e&&(e={minutes:!1,seconds:!0,ms:!0});var n=(e=r({minutes:!1,seconds:!0,ms:!0},e)).seconds&&Math.floor(t/1e3),i=e.minutes&&n&&(e.ms?Math.floor(n/60):Math.round(n/60)),o=e.ms&&Math.floor(t%1e3||t);return(i?i+" minutes ":"")+(n?n+" seconds ":"")+(o?o+" ms ":"")}},{}],113:[function(t,e,n){"use strict";function r(t){return new Promise((function(e){setTimeout((function(){e()}),t)}))}Object.defineProperty(n,"__esModule",{value:!0}),n.sleep=r,n.wait=r,n.withTime=function(t,e){console.time(t);var n=e();return console.timeEnd(t),n}},{}],114:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.throttle=function(t,e,n){var r,i,o;void 0===n&&(n={});var a=null,s=0;n||(n={});var u=function(){s=!1===n.leading?0:Date.now(),a=null,o=t.apply(r,i),r=i=null};return function(){var c=Date.now();s||!1!==n.leading||(s=c);var f=e-(c-s);return r=this,i=arguments,f<=0?(clearTimeout(a),a=null,s=c,o=t.apply(r,i),r=i=null):a||!1===n.trailing||(a=setTimeout(u,f)),o}}},{}],115:[function(t,e,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},i=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){t.done?i(t.value):new n((function(e){e(t.value)})).then(a,s)}u((r=r.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(n,"__esModule",{value:!0});var a=t("."),s={interval:200,timeout:3e3};n.waitForPredicate=function(t,e){return void 0===e&&(e={interval:200,timeout:3e3}),i(this,void 0,void 0,(function(){var n,i,u;return o(this,(function(o){switch(o.label){case 0:n="string"==typeof e?r({},s,{timeoutError:e}):e,i=setTimeout((function(){var e=n.timeoutError||t.toString().substring(0,Math.min(t.toString().length,100));throw new Error(e)}),n.timeout||3e3),o.label=1;case 1:return(u=t())?[3,3]:[4,a.sleep(n.interval||200)];case 2:return o.sent(),[3,1];case 3:return i&&clearTimeout(i),[2,u]}}))}))}},{".":111}],116:[function(t,e,n){"use strict";function r(t,e){e(t),(t.childNodes||[]).forEach((function(t){return r(t,e)}))}function i(t,e){void 0===e&&(e=void 0);var n=-1;return t.parentNode&&(e||t.parentNode&&t.parentNode.childNodes||[]).find((function(e,r){return e===t&&(n=r,!0)})),n}function o(t,e,n){return void 0===n&&(n={}),!t||e(t)||!t.parentNode||o(t.parentNode,e,n)}function a(t,e,n){var r;return void 0===n&&(n={}),o(t,(function(t){return!!e(t)&&(r=t,!0)}),n),r}function s(t,e,n,r){void 0===n&&(n={}),void 0===r&&(r=!1);var i=!1;return n.childrenFirst?(i=(t.childNodes||[]).some((function(t){return s(t,e,n,!0)})))?(n.breakOnDescendantSignal||!n.andSelf&&!r||e(t),!0):((n.andSelf||r)&&(i=e(t)),!1):((n.andSelf||r)&&(i=e(t)),i?n.visitDescendantsOnSelfSignalAnyway&&(t.childNodes||[]).some((function(t){return s(t,e,n,!0)}))||!0:(t.childNodes||[]).some((function(t){return s(t,e,n,!0)})))}Object.defineProperty(n,"__esModule",{value:!0}),n.visitChildren=r,n.mapChildren=function(t,e){var n=[];return r(t,(function(t){return n.push(e(t))})),n},n.findChildren=function(t,e){return(t.childNodes||[]).find(e)},n.filterChildren=function(t,e){return(t.childNodes||[]).filter((function(t){return e(t)}))},n.getChildIndex=i,n.getNextSibling=function(t){var e=i(t,t.childNodes);return t.parentNode&&e<(t.childNodes||[]).length-1?(t.childNodes||[])[e+1]:void 0},n.getSiblings=function(t,e){return void 0===e&&(e=!1),t.parentNode?(t.parentNode.childNodes||[]).filter((function(e){return e!==t})):[]},n.getPreviousSibling=function(t){var e=i(t,t.childNodes);return e>0&&t.parentNode?(t.childNodes||[])[e-1]:void 0},n.visitAncestors=o,n.findAncestor=a,n.findRootElement=function(t){return t?t.parentNode?a(t.parentNode,(function(t){return!t.parentNode})):t:void 0},n.filterAncestors=function(t,e,n){void 0===n&&(n={});var r=[];return o(t,(function(t){return e(t)&&r.push(t),!1})),r},n.visitDescendants=s,n.filterDescendants=function(t,e,n){void 0===n&&(n={});var r=[];return s(t,(function(t){return e(t)&&r.push(t),!1}),n),r},n.mapDescendants=function(t,e,n){void 0===n&&(n={});var r=[];return s(t,(function(t){return r.push(e(t)),!1}),n),r},n.findDescendant=function(t,e,n){var r;return void 0===n&&(n={}),s(t,(function(t){return!!e(t)&&(r=t,!0)}),n),r},n.getAncestors=function(t){for(var e=t,n=[];e&&(e=e.parentNode);)n.push(e);return n},n.getDistanceToAncestor=function t(e,n){return e!==n&&e&&n?t(e.parentNode,n)+1:0}},{}],117:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=Object.prototype.toString;function i(t){return r.call(t)}n.getType=i,n.isObject=function(t){return"object"==typeof t&&"[object Object]"===i(t)},n.isArray=Array.isArray||function(t){return"[object Array]"===r.call(t)},n.isString=function(t){return"string"==typeof t},n.isBoolean=function(t){return"boolean"==typeof t||"[object Boolean]"===i(t)},n.typeOf=function(t){return{}.toString.call(t).slice(8,-1).toLowerCase()},n.notUndefined=function(t){return void 0!==t},n.notFalsy=function(t){return!!t}},{}],118:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getFileNameFromUrl=function(t){var e=t.indexOf("#");return((t=-1!==e?t.substring(0,e):t).split("/").pop()||"").replace(/[\?].*$/g,"")},n.getParametersFromUrl=function(t){var e=t.split("?")[1],n={};if(!e)return n;for(var r=(e=e.split("#")[0]).split("&"),i=0;i<r.length;i++){var o=r[i].split("=");n[o[0]]=o[1]||""}return n}},{}],119:[function(t,e,n){"use strict";var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}e.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,s,u=a(t),c=1;c<arguments.length;c++){for(var f in n=Object(arguments[c]))i.call(n,f)&&(u[f]=n[f]);if(r){s=r(n);for(var l=0;l<s.length;l++)o.call(n,s[l])&&(u[s[l]]=n[s[l]])}}return u}},{}],120:[function(t,e,n){(function(t){function e(t,e){for(var n=0,r=t.length-1;r>=0;r--){var i=t[r];"."===i?t.splice(r,1):".."===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function r(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}n.resolve=function(){for(var n="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var a=o>=0?arguments[o]:t.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(n=a+"/"+n,i="/"===a.charAt(0))}return(i?"/":"")+(n=e(r(n.split("/"),(function(t){return!!t})),!i).join("/"))||"."},n.normalize=function(t){var o=n.isAbsolute(t),a="/"===i(t,-1);return(t=e(r(t.split("/"),(function(t){return!!t})),!o).join("/"))||o||(t="."),t&&a&&(t+="/"),(o?"/":"")+t},n.isAbsolute=function(t){return"/"===t.charAt(0)},n.join=function(){var t=Array.prototype.slice.call(arguments,0);return n.normalize(r(t,(function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},n.relative=function(t,e){function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var n=t.length-1;n>=0&&""===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=n.resolve(t).substr(1),e=n.resolve(e).substr(1);for(var i=r(t.split("/")),o=r(e.split("/")),a=Math.min(i.length,o.length),s=a,u=0;u<a;u++)if(i[u]!==o[u]){s=u;break}var c=[];for(u=s;u<i.length;u++)c.push("..");return(c=c.concat(o.slice(s))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(t){if("string"!=typeof t&&(t+=""),0===t.length)return".";for(var e=t.charCodeAt(0),n=47===e,r=-1,i=!0,o=t.length-1;o>=1;--o)if(47===(e=t.charCodeAt(o))){if(!i){r=o;break}}else i=!1;return-1===r?n?"/":".":n&&1===r?"/":t.slice(0,r)},n.basename=function(t,e){var n=function(t){"string"!=typeof t&&(t+="");var e,n=0,r=-1,i=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!i){n=e+1;break}}else-1===r&&(i=!1,r=e+1);return-1===r?"":t.slice(n,r)}(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},n.extname=function(t){"string"!=typeof t&&(t+="");for(var e=-1,n=0,r=-1,i=!0,o=0,a=t.length-1;a>=0;--a){var s=t.charCodeAt(a);if(47!==s)-1===r&&(i=!1,r=a+1),46===s?-1===e?e=a:1!==o&&(o=1):-1!==e&&(o=-1);else if(!i){n=a+1;break}}return-1===e||-1===r||0===o||1===o&&e===r-1&&e===n+1?"":t.slice(e,r)};var i="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,t("_process"))},{_process:121}],121:[function(t,e,n){var r,i,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function u(t){if(r===setTimeout)return setTimeout(t,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:a}catch(t){r=a}try{i="function"==typeof clearTimeout?clearTimeout:s}catch(t){i=s}}();var c,f=[],l=!1,p=-1;function d(){l&&c&&(l=!1,c.length?f=c.concat(f):p=-1,f.length&&h())}function h(){if(!l){var t=u(d);l=!0;for(var e=f.length;e;){for(c=f,f=[];++p<e;)c&&c[p].run();p=-1,e=f.length}c=null,l=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===s||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function m(t,e){this.fun=t,this.array=e}function v(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];f.push(new m(t,e)),1!==f.length||l||u(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},{}]},{},[11])(11)},module.exports=f()}).call(this,__webpack_require__(5))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.VideoReader=void 0;e.VideoReader=class{constructor(t,e,n){this.constraints=n,this.video=t,this.cap=new cv.VideoCapture(t),this.canvas=e,this.mat=null,this.streaming=!1,this._size=this.getSize()}get isStreaming(){return this.streaming}get size(){return this._size}get constraints(){return this._constraints}set constraints(t){const e=this.streaming;this.stop(),this._constraints=t,e&&this.start()}get deviceId(){return this._deviceId}read(){return this.cap.read(this.mat),this.mat}start(){const t=this;return new Promise((function(e){t.video.addEventListener("canplay",(function(){const n=t.getSize();t._size=n,t.canvas.width=n.width,t.canvas.height=n.height,t.mat=new cv.Mat(n.height,n.width,cv.CV_8UC4),t.streaming=!0,e()}),!1),navigator.mediaDevices.getUserMedia(t._constraints).then((function(e){t.stream=t.video.srcObject=e,t._deviceId=t.stream.getVideoTracks()[0].getCapabilities().deviceId,t.video.play()}))}))}stop(){this.streaming&&(this.stream.getVideoTracks().forEach((function(t){return t.stop()})),this.canvas.getContext("2d").clearRect(0,0,this.canvas.width,this.canvas.height),this.video.pause(),this.streaming=!1,this.mat.delete())}getSize(){return{width:this.video.width,height:this.video.height}}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MarkerDetector=void 0;const r=n(8);class i{constructor(t,e){this.code=t,this.action=e}}class o{constructor(t){this.experience=t;let e=Array(),n=20,r=1,o=20,a=1;t.actions.forEach(t=>{t.codes.forEach(s=>{const u=new i(s.split(":").map(t=>Number.parseInt(t)),t);e.push(u),o=Math.min(u.code.length,o),a=Math.max(u.code.length,a),u.code.forEach(t=>{n=Math.min(t,n),r=Math.max(t,r)})})}),this.codes=e,this.maxRegions=o,this.minRegions=a,this.maxValue=r,this.minValue=n,console.log(this)}findMarker(t){for(let e=0;e<t.cols;++e){let n=this.createMarkerForNode(e,t);if(null!=n)return n}}static getFirstChild(t,e){return t.intPtr(0,e)[2]}static getNextNode(t,e){return t.intPtr(0,e)[0]}createMarkerForNode(t,e){let n=[],i=o.getFirstChild(e,t);for(;i>=0;){let t=this.countLeafs(i,e);if(null==t)return null;if(n.length>=this.maxRegions)return null;n.push(t),i=o.getNextNode(e,i)}if(n.length<this.minRegions)return null;n.sort();for(let e of this.codes){if(e.code.length==n.length&&e.code.every((function(t,e){return t===n[e]})))return new r.Marker(t,n,e.action)}return null}countLeafs(t,e){let n=0,r=o.getFirstChild(e,t);for(;r>=0;){if(o.getFirstChild(e,r)>=0)return null;if(n++,n>this.maxValue)return null;r=o.getNextNode(e,r)}return n<this.minValue?null:n}}e.MarkerDetector=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Marker=void 0;e.Marker=class{constructor(t,e,n){this.nodeIndex=t,this.regions=e,this.action=n}equals(t){return null!=t&&this.regions.length==t.regions.length&&this.regions.every((function(e,n){return e===t.regions[n]}))}}},function(t,e,n){"use strict";n.r(e),e.default='<div style="display: flex; flex-direction: column; align-items: center">\r\n\t<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">\r\n\t<link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">\r\n\t<video id="artc_videoInput" width="800" height="600" style="display: none"></video>\r\n\t<div id="artc_placeholder" style="width: 800px; height: 600px; overflow: hidden; display: flex; align-items: center">\r\n\t\t<img id="artc_image" width="800" style="display: none">\r\n\t</div>\r\n\t<canvas id="artc_canvasOutput" width="800" height="600" style="background-color: black; display: none"></canvas>\r\n\t<div style="display: flex; width: 800px; padding: 10px">\r\n\t\t<button id="artc_buttonAction" class="mdc-fab mdc-fab--extended mdc-fab--exited" style="display:none;">\r\n\t\t\t<div class="mdc-fab__ripple"></div>\r\n\t\t\t<span class="mdc-fab__label"></span>\r\n\t\t</button>\r\n\t\t<div style="flex: 1;"></div>\r\n\t\t<select id="artc_deviceSelect" style="display: none"></select>\r\n\t\t<div style="flex: 1;"></div>\r\n\t\t<div style="position: relative">\r\n\t\t<button id="artc_buttonStart" class="mdc-fab mdc-fab--extended mdc-fab--exited" style="display: none">\r\n\t\t\t<div class="mdc-fab__ripple"></div>\r\n\t\t\t<span class="material-icons mdc-fab__icon">camera_alt</span>\r\n\t\t\t<span class="mdc-fab__label">Scan</span>\r\n\t\t</button>\r\n\t\t<button id="artc_buttonStop" class="mdc-button mdc-button--outlined" style="display: none">\r\n\t\t\t<div class="mdc-button__ripple"></div>\r\n\t\t\t<i class="material-icons mdc-button__icon" aria-hidden="true">stop</i>\r\n\t\t\t<span class="mdc-button__label">Stop</span>\r\n\t\t</button>\r\n\t\t<div id="artc_loadingIndicator" class="mdc-circular-progress mdc-circular-progress--large" style="position: absolute; right: 0" role="progressbar">\r\n\t\t\t<div class="mdc-circular-progress__determinate-container">\r\n\t\t\t\t<svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 48 48"\r\n\t\t\t\t     xmlns="http://www.w3.org/2000/svg">\r\n\t\t\t\t\t<circle class="mdc-circular-progress__determinate-circle" cx="24" cy="24" r="18"\r\n\t\t\t\t\t        stroke-dasharray="113.097" stroke-dashoffset="113.097"/>\r\n\t\t\t\t</svg>\r\n\t\t\t</div><div class="mdc-circular-progress__indeterminate-container">\r\n\t\t\t\t<div class="mdc-circular-progress__spinner-layer">\r\n\t\t\t\t\t<div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">\r\n\t\t\t\t\t\t<svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48"\r\n\t\t\t\t\t\t     xmlns="http://www.w3.org/2000/svg">\r\n\t\t\t\t\t\t\t<circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549"/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div><div class="mdc-circular-progress__gap-patch">\r\n\t\t\t\t\t\t<svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48"\r\n\t\t\t\t\t\t     xmlns="http://www.w3.org/2000/svg">\r\n\t\t\t\t\t\t\t<circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549"/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div><div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">\r\n\t\t\t\t\t\t<svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48"\r\n\t\t\t\t\t\t     xmlns="http://www.w3.org/2000/svg">\r\n\t\t\t\t\t\t\t<circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549"/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},function(t,e,n){"use strict";n.r(e),n.d(e,"util",(function(){return i})),n.d(e,"MDCRipple",(function(){return b})),n.d(e,"cssClasses",(function(){return p})),n.d(e,"strings",(function(){return d})),n.d(e,"numbers",(function(){return h})),n.d(e,"MDCRippleFoundation",(function(){return y}));var r,i={};function o(t,e){void 0===e&&(e=!1);var n,i=t.CSS;if("boolean"==typeof r&&!e)return r;if(!(i&&"function"==typeof i.supports))return!1;var o=i.supports("--css-vars","yes"),a=i.supports("(--css-vars: yes)")&&i.supports("color","#00000000");return n=o||a,e||(r=n),n}function a(t,e,n){if(!t)return{x:0,y:0};var r,i,o=e.x,a=e.y,s=o+n.left,u=a+n.top;if("touchstart"===t.type){var c=t;r=c.changedTouches[0].pageX-s,i=c.changedTouches[0].pageY-u}else{var f=t;r=f.pageX-s,i=f.pageY-u}return{x:r,y:i}}n.r(i),n.d(i,"supportsCssVariables",(function(){return o})),n.d(i,"getNormalizedEventCoords",(function(){return a}));var s=n(0),u=n(2);
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function c(t){return void 0===t&&(t=window),!!function(t){void 0===t&&(t=window);var e=!1;try{var n={get passive(){return e=!0,!1}},r=function(){};t.document.addEventListener("test",r,n),t.document.removeEventListener("test",r,n)}catch(t){e=!1}return e}
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */(t)&&{passive:!0}}function f(t,e){return(t.matches||t.webkitMatchesSelector||t.msMatchesSelector).call(t,e)}var l=n(1),p={BG_FOCUSED:"mdc-ripple-upgraded--background-focused",FG_ACTIVATION:"mdc-ripple-upgraded--foreground-activation",FG_DEACTIVATION:"mdc-ripple-upgraded--foreground-deactivation",ROOT:"mdc-ripple-upgraded",UNBOUNDED:"mdc-ripple-upgraded--unbounded"},d={VAR_FG_SCALE:"--mdc-ripple-fg-scale",VAR_FG_SIZE:"--mdc-ripple-fg-size",VAR_FG_TRANSLATE_END:"--mdc-ripple-fg-translate-end",VAR_FG_TRANSLATE_START:"--mdc-ripple-fg-translate-start",VAR_LEFT:"--mdc-ripple-left",VAR_TOP:"--mdc-ripple-top"},h={DEACTIVATION_TIMEOUT_MS:225,FG_DEACTIVATION_MS:150,INITIAL_ORIGIN_SCALE:.6,PADDING:10,TAP_DELAY_MS:300},m=["touchstart","pointerdown","mousedown","keydown"],v=["touchend","pointerup","mouseup","contextmenu"],g=[],y=function(t){function e(n){var r=t.call(this,Object(s.a)(Object(s.a)({},e.defaultAdapter),n))||this;return r.activationAnimationHasEnded_=!1,r.activationTimer_=0,r.fgDeactivationRemovalTimer_=0,r.fgScale_="0",r.frame_={width:0,height:0},r.initialSize_=0,r.layoutFrame_=0,r.maxRadius_=0,r.unboundedCoords_={left:0,top:0},r.activationState_=r.defaultActivationState_(),r.activationTimerCallback_=function(){r.activationAnimationHasEnded_=!0,r.runDeactivationUXLogicIfReady_()},r.activateHandler_=function(t){return r.activate_(t)},r.deactivateHandler_=function(){return r.deactivate_()},r.focusHandler_=function(){return r.handleFocus()},r.blurHandler_=function(){return r.handleBlur()},r.resizeHandler_=function(){return r.layout()},r}return Object(s.b)(e,t),Object.defineProperty(e,"cssClasses",{get:function(){return p},enumerable:!0,configurable:!0}),Object.defineProperty(e,"strings",{get:function(){return d},enumerable:!0,configurable:!0}),Object.defineProperty(e,"numbers",{get:function(){return h},enumerable:!0,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClass:function(){},browserSupportsCssVars:function(){return!0},computeBoundingRect:function(){return{top:0,right:0,bottom:0,left:0,width:0,height:0}},containsEventTarget:function(){return!0},deregisterDocumentInteractionHandler:function(){},deregisterInteractionHandler:function(){},deregisterResizeHandler:function(){},getWindowPageOffset:function(){return{x:0,y:0}},isSurfaceActive:function(){return!0},isSurfaceDisabled:function(){return!0},isUnbounded:function(){return!0},registerDocumentInteractionHandler:function(){},registerInteractionHandler:function(){},registerResizeHandler:function(){},removeClass:function(){},updateCssVariable:function(){}}},enumerable:!0,configurable:!0}),e.prototype.init=function(){var t=this,n=this.supportsPressRipple_();if(this.registerRootHandlers_(n),n){var r=e.cssClasses,i=r.ROOT,o=r.UNBOUNDED;requestAnimationFrame((function(){t.adapter.addClass(i),t.adapter.isUnbounded()&&(t.adapter.addClass(o),t.layoutInternal_())}))}},e.prototype.destroy=function(){var t=this;if(this.supportsPressRipple_()){this.activationTimer_&&(clearTimeout(this.activationTimer_),this.activationTimer_=0,this.adapter.removeClass(e.cssClasses.FG_ACTIVATION)),this.fgDeactivationRemovalTimer_&&(clearTimeout(this.fgDeactivationRemovalTimer_),this.fgDeactivationRemovalTimer_=0,this.adapter.removeClass(e.cssClasses.FG_DEACTIVATION));var n=e.cssClasses,r=n.ROOT,i=n.UNBOUNDED;requestAnimationFrame((function(){t.adapter.removeClass(r),t.adapter.removeClass(i),t.removeCssVars_()}))}this.deregisterRootHandlers_(),this.deregisterDeactivationHandlers_()},e.prototype.activate=function(t){this.activate_(t)},e.prototype.deactivate=function(){this.deactivate_()},e.prototype.layout=function(){var t=this;this.layoutFrame_&&cancelAnimationFrame(this.layoutFrame_),this.layoutFrame_=requestAnimationFrame((function(){t.layoutInternal_(),t.layoutFrame_=0}))},e.prototype.setUnbounded=function(t){var n=e.cssClasses.UNBOUNDED;t?this.adapter.addClass(n):this.adapter.removeClass(n)},e.prototype.handleFocus=function(){var t=this;requestAnimationFrame((function(){return t.adapter.addClass(e.cssClasses.BG_FOCUSED)}))},e.prototype.handleBlur=function(){var t=this;requestAnimationFrame((function(){return t.adapter.removeClass(e.cssClasses.BG_FOCUSED)}))},e.prototype.supportsPressRipple_=function(){return this.adapter.browserSupportsCssVars()},e.prototype.defaultActivationState_=function(){return{activationEvent:void 0,hasDeactivationUXRun:!1,isActivated:!1,isProgrammatic:!1,wasActivatedByPointer:!1,wasElementMadeActive:!1}},e.prototype.registerRootHandlers_=function(t){var e=this;t&&(m.forEach((function(t){e.adapter.registerInteractionHandler(t,e.activateHandler_)})),this.adapter.isUnbounded()&&this.adapter.registerResizeHandler(this.resizeHandler_)),this.adapter.registerInteractionHandler("focus",this.focusHandler_),this.adapter.registerInteractionHandler("blur",this.blurHandler_)},e.prototype.registerDeactivationHandlers_=function(t){var e=this;"keydown"===t.type?this.adapter.registerInteractionHandler("keyup",this.deactivateHandler_):v.forEach((function(t){e.adapter.registerDocumentInteractionHandler(t,e.deactivateHandler_)}))},e.prototype.deregisterRootHandlers_=function(){var t=this;m.forEach((function(e){t.adapter.deregisterInteractionHandler(e,t.activateHandler_)})),this.adapter.deregisterInteractionHandler("focus",this.focusHandler_),this.adapter.deregisterInteractionHandler("blur",this.blurHandler_),this.adapter.isUnbounded()&&this.adapter.deregisterResizeHandler(this.resizeHandler_)},e.prototype.deregisterDeactivationHandlers_=function(){var t=this;this.adapter.deregisterInteractionHandler("keyup",this.deactivateHandler_),v.forEach((function(e){t.adapter.deregisterDocumentInteractionHandler(e,t.deactivateHandler_)}))},e.prototype.removeCssVars_=function(){var t=this,n=e.strings;Object.keys(n).forEach((function(e){0===e.indexOf("VAR_")&&t.adapter.updateCssVariable(n[e],null)}))},e.prototype.activate_=function(t){var e=this;if(!this.adapter.isSurfaceDisabled()){var n=this.activationState_;if(!n.isActivated){var r=this.previousActivationEvent_;if(!(r&&void 0!==t&&r.type!==t.type))n.isActivated=!0,n.isProgrammatic=void 0===t,n.activationEvent=t,n.wasActivatedByPointer=!n.isProgrammatic&&(void 0!==t&&("mousedown"===t.type||"touchstart"===t.type||"pointerdown"===t.type)),void 0!==t&&g.length>0&&g.some((function(t){return e.adapter.containsEventTarget(t)}))?this.resetActivationState_():(void 0!==t&&(g.push(t.target),this.registerDeactivationHandlers_(t)),n.wasElementMadeActive=this.checkElementMadeActive_(t),n.wasElementMadeActive&&this.animateActivation_(),requestAnimationFrame((function(){g=[],n.wasElementMadeActive||void 0===t||" "!==t.key&&32!==t.keyCode||(n.wasElementMadeActive=e.checkElementMadeActive_(t),n.wasElementMadeActive&&e.animateActivation_()),n.wasElementMadeActive||(e.activationState_=e.defaultActivationState_())})))}}},e.prototype.checkElementMadeActive_=function(t){return void 0===t||"keydown"!==t.type||this.adapter.isSurfaceActive()},e.prototype.animateActivation_=function(){var t=this,n=e.strings,r=n.VAR_FG_TRANSLATE_START,i=n.VAR_FG_TRANSLATE_END,o=e.cssClasses,a=o.FG_DEACTIVATION,s=o.FG_ACTIVATION,u=e.numbers.DEACTIVATION_TIMEOUT_MS;this.layoutInternal_();var c="",f="";if(!this.adapter.isUnbounded()){var l=this.getFgTranslationCoordinates_(),p=l.startPoint,d=l.endPoint;c=p.x+"px, "+p.y+"px",f=d.x+"px, "+d.y+"px"}this.adapter.updateCssVariable(r,c),this.adapter.updateCssVariable(i,f),clearTimeout(this.activationTimer_),clearTimeout(this.fgDeactivationRemovalTimer_),this.rmBoundedActivationClasses_(),this.adapter.removeClass(a),this.adapter.computeBoundingRect(),this.adapter.addClass(s),this.activationTimer_=setTimeout((function(){return t.activationTimerCallback_()}),u)},e.prototype.getFgTranslationCoordinates_=function(){var t,e=this.activationState_,n=e.activationEvent;return{startPoint:t={x:(t=e.wasActivatedByPointer?a(n,this.adapter.getWindowPageOffset(),this.adapter.computeBoundingRect()):{x:this.frame_.width/2,y:this.frame_.height/2}).x-this.initialSize_/2,y:t.y-this.initialSize_/2},endPoint:{x:this.frame_.width/2-this.initialSize_/2,y:this.frame_.height/2-this.initialSize_/2}}},e.prototype.runDeactivationUXLogicIfReady_=function(){var t=this,n=e.cssClasses.FG_DEACTIVATION,r=this.activationState_,i=r.hasDeactivationUXRun,o=r.isActivated;(i||!o)&&this.activationAnimationHasEnded_&&(this.rmBoundedActivationClasses_(),this.adapter.addClass(n),this.fgDeactivationRemovalTimer_=setTimeout((function(){t.adapter.removeClass(n)}),h.FG_DEACTIVATION_MS))},e.prototype.rmBoundedActivationClasses_=function(){var t=e.cssClasses.FG_ACTIVATION;this.adapter.removeClass(t),this.activationAnimationHasEnded_=!1,this.adapter.computeBoundingRect()},e.prototype.resetActivationState_=function(){var t=this;this.previousActivationEvent_=this.activationState_.activationEvent,this.activationState_=this.defaultActivationState_(),setTimeout((function(){return t.previousActivationEvent_=void 0}),e.numbers.TAP_DELAY_MS)},e.prototype.deactivate_=function(){var t=this,e=this.activationState_;if(e.isActivated){var n=Object(s.a)({},e);e.isProgrammatic?(requestAnimationFrame((function(){return t.animateDeactivation_(n)})),this.resetActivationState_()):(this.deregisterDeactivationHandlers_(),requestAnimationFrame((function(){t.activationState_.hasDeactivationUXRun=!0,t.animateDeactivation_(n),t.resetActivationState_()})))}},e.prototype.animateDeactivation_=function(t){var e=t.wasActivatedByPointer,n=t.wasElementMadeActive;(e||n)&&this.runDeactivationUXLogicIfReady_()},e.prototype.layoutInternal_=function(){var t=this;this.frame_=this.adapter.computeBoundingRect();var n=Math.max(this.frame_.height,this.frame_.width);this.maxRadius_=this.adapter.isUnbounded()?n:Math.sqrt(Math.pow(t.frame_.width,2)+Math.pow(t.frame_.height,2))+e.numbers.PADDING;var r=Math.floor(n*e.numbers.INITIAL_ORIGIN_SCALE);this.adapter.isUnbounded()&&r%2!=0?this.initialSize_=r-1:this.initialSize_=r,this.fgScale_=""+this.maxRadius_/this.initialSize_,this.updateLayoutCssVars_()},e.prototype.updateLayoutCssVars_=function(){var t=e.strings,n=t.VAR_FG_SIZE,r=t.VAR_LEFT,i=t.VAR_TOP,o=t.VAR_FG_SCALE;this.adapter.updateCssVariable(n,this.initialSize_+"px"),this.adapter.updateCssVariable(o,this.fgScale_),this.adapter.isUnbounded()&&(this.unboundedCoords_={left:Math.round(this.frame_.width/2-this.initialSize_/2),top:Math.round(this.frame_.height/2-this.initialSize_/2)},this.adapter.updateCssVariable(r,this.unboundedCoords_.left+"px"),this.adapter.updateCssVariable(i,this.unboundedCoords_.top+"px"))},e}(l.a),b=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.disabled=!1,e}return Object(s.b)(e,t),e.attachTo=function(t,n){void 0===n&&(n={isUnbounded:void 0});var r=new e(t);return void 0!==n.isUnbounded&&(r.unbounded=n.isUnbounded),r},e.createAdapter=function(t){return{addClass:function(e){return t.root.classList.add(e)},browserSupportsCssVars:function(){return o(window)},computeBoundingRect:function(){return t.root.getBoundingClientRect()},containsEventTarget:function(e){return t.root.contains(e)},deregisterDocumentInteractionHandler:function(t,e){return document.documentElement.removeEventListener(t,e,c())},deregisterInteractionHandler:function(e,n){return t.root.removeEventListener(e,n,c())},deregisterResizeHandler:function(t){return window.removeEventListener("resize",t)},getWindowPageOffset:function(){return{x:window.pageXOffset,y:window.pageYOffset}},isSurfaceActive:function(){return f(t.root,":active")},isSurfaceDisabled:function(){return Boolean(t.disabled)},isUnbounded:function(){return Boolean(t.unbounded)},registerDocumentInteractionHandler:function(t,e){return document.documentElement.addEventListener(t,e,c())},registerInteractionHandler:function(e,n){return t.root.addEventListener(e,n,c())},registerResizeHandler:function(t){return window.addEventListener("resize",t)},removeClass:function(e){return t.root.classList.remove(e)},updateCssVariable:function(e,n){return t.root.style.setProperty(e,n)}}},Object.defineProperty(e.prototype,"unbounded",{get:function(){return Boolean(this.unbounded_)},set:function(t){this.unbounded_=Boolean(t),this.setUnbounded_()},enumerable:!0,configurable:!0}),e.prototype.activate=function(){this.foundation.activate()},e.prototype.deactivate=function(){this.foundation.deactivate()},e.prototype.layout=function(){this.foundation.layout()},e.prototype.getDefaultFoundation=function(){return new y(e.createAdapter(this))},e.prototype.initialSyncWithDOM=function(){var t=this.root;this.unbounded="mdcRippleIsUnbounded"in t.dataset},e.prototype.setUnbounded_=function(){this.foundation.setUnbounded(Boolean(this.unbounded_))},e}(u.a);
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */},function(t,e,n){"use strict";n.r(e),n.d(e,"MDCCircularProgress",(function(){return c})),n.d(e,"cssClasses",(function(){return a})),n.d(e,"strings",(function(){return s})),n.d(e,"MDCCircularProgressFoundation",(function(){return u}));var r=n(0),i=n(2),o=n(1),a={INDETERMINATE_CLASS:"mdc-circular-progress--indeterminate",CLOSED_CLASS:"mdc-circular-progress--closed"},s={DETERMINATE_CIRCLE_SELECTOR:".mdc-circular-progress__determinate-circle",ARIA_VALUENOW:"aria-valuenow",RADIUS:"r",STROKE_DASHOFFSET:"stroke-dashoffset"},u=function(t){function e(n){return t.call(this,Object(r.a)(Object(r.a)({},e.defaultAdapter),n))||this}return Object(r.b)(e,t),Object.defineProperty(e,"cssClasses",{get:function(){return a},enumerable:!0,configurable:!0}),Object.defineProperty(e,"strings",{get:function(){return s},enumerable:!0,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClass:function(){},getDeterminateCircleAttribute:function(){return null},hasClass:function(){return!1},removeClass:function(){},removeAttribute:function(){},setAttribute:function(){},setDeterminateCircleAttribute:function(){}}},enumerable:!0,configurable:!0}),e.prototype.init=function(){this.isClosed_=this.adapter.hasClass(a.CLOSED_CLASS),this.isDeterminate_=!this.adapter.hasClass(a.INDETERMINATE_CLASS),this.progress_=0,this.isDeterminate_&&this.adapter.setAttribute(s.ARIA_VALUENOW,this.progress_.toString()),this.radius_=Number(this.adapter.getDeterminateCircleAttribute(s.RADIUS))},e.prototype.isDeterminate=function(){return this.isDeterminate_},e.prototype.getProgress=function(){return this.progress_},e.prototype.isClosed=function(){return this.isClosed_},e.prototype.setDeterminate=function(t){this.isDeterminate_=t,this.isDeterminate_?(this.adapter.removeClass(a.INDETERMINATE_CLASS),this.setProgress(this.progress_)):(this.adapter.addClass(a.INDETERMINATE_CLASS),this.adapter.removeAttribute(s.ARIA_VALUENOW))},e.prototype.setProgress=function(t){if(this.progress_=t,this.isDeterminate_){var e=(1-this.progress_)*(2*Math.PI*this.radius_);this.adapter.setDeterminateCircleAttribute(s.STROKE_DASHOFFSET,""+e),this.adapter.setAttribute(s.ARIA_VALUENOW,this.progress_.toString())}},e.prototype.open=function(){this.isClosed_=!1,this.adapter.removeClass(a.CLOSED_CLASS)},e.prototype.close=function(){this.isClosed_=!0,this.adapter.addClass(a.CLOSED_CLASS)},e}(o.a),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(r.b)(e,t),e.prototype.initialize=function(){this.determinateCircle_=this.root.querySelector(u.strings.DETERMINATE_CIRCLE_SELECTOR)},e.attachTo=function(t){return new e(t)},Object.defineProperty(e.prototype,"determinate",{set:function(t){this.foundation.setDeterminate(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"progress",{set:function(t){this.foundation.setProgress(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isClosed",{get:function(){return this.foundation.isClosed()},enumerable:!0,configurable:!0}),e.prototype.open=function(){this.foundation.open()},e.prototype.close=function(){this.foundation.close()},e.prototype.getDefaultFoundation=function(){var t=this;return new u({addClass:function(e){return t.root.classList.add(e)},getDeterminateCircleAttribute:function(e){return t.determinateCircle_.getAttribute(e)},hasClass:function(e){return t.root.classList.contains(e)},removeClass:function(e){return t.root.classList.remove(e)},removeAttribute:function(e){return t.root.removeAttribute(e)},setAttribute:function(e,n){return t.root.setAttribute(e,n)},setDeterminateCircleAttribute:function(e,n){return t.determinateCircle_.setAttribute(e,n)}})},e}(i.a)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,